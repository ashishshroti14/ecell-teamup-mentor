{"version":3,"sources":["utils/getCookieToken.js","common/SpecialRoutes.jsx","utils/openAntdNotification.js","redux/projects/projectActionTypes.js","redux/projects/projectActions.js","redux/student/studentActionTypes.js","redux/loadPersistedState.js","redux/projects/projectReducer.js","redux/student/initialStudentStates.js","redux/rootReducer.js","redux/student/studentReducers.js","redux/store.js","redux/student/studentActions.js","views/StudentDashboard/Projects.jsx","views/StudentDashboard/ProjectContainer.jsx","views/StudentDashboard/AvatarUploader.jsx","utils/antd-layouts.js","views/StudentDashboard/EditInfoModal/compareFields.js","views/StudentDashboard/EditInfoModal/EditInfoModal.jsx","views/StudentDashboard/StudentMenu.jsx","views/StudentDashboard/StudentDashboard.jsx","redux/mentor/mentorActionTypes.js","redux/loadPersistedStateMentor.js","redux/mentor/initialMentorState.js","redux/rootReducerMentor.js","redux/mentor/mentorReducers.js","redux/storeMentor.js","redux/mentor/mentorActions.js","views/MentorDashboard/Statistics.jsx","views/MentorDashboard/Application.jsx","views/MentorDashboard/Project.jsx","views/MentorDashboard/Greetings.jsx","views/MentorDashboard/ChangePasswordModal/ChangePasswordModal.jsx","views/MentorDashboard/AvatarUploader.jsx","views/MentorDashboard/DashboardStructure.jsx","views/MentorDashboard/MentorDashboard.jsx","views/Login/ForgotPasswordModal/ForgotPasswordModal.jsx","views/Login/Login.jsx","views/Login/LoginMentor.jsx","views/RegisterForm/VerificationModal.jsx","views/RegisterForm/RegisterForm.jsx","views/NotFound.jsx","common/ECellFooter.jsx","App.js","index.js"],"names":["getCookieToken","document","cookie","token","split","filter","str","trim","startsWith","PrivateRoute","props","children","Component","component","redirectTo","rest","userType","isLoggedIn","render","location","to","pathname","state","from","PublicRoute","openNotification","type","message","description","notification","placement","duration","projectActionTypes","FETCH_PROJECTS_REQUEST","FETCH_PROJECTS_SUCCESS","FETCH_PROJECTS_FAILURE","UPDATE_PROJECT_REQUEST","UPDATE_PROJECT_SUCCESS","UPDATE_PROJECT_FAILURE","axios","Axios","create","baseURL","withCredentials","updateProject","projectID","dispatch","a","put","res","studentID","data","payload","console","log","error","response","studentActionTypes","REGISTER_REQUEST","REGISTER_SUCCESS","REGISTER_FAILURE","LOGIN_REQUEST","LOGIN_SUCCESS","LOGIN_FAILURE","LOGOUT_REQUEST","LOGOUT_SUCCESS","LOGOUT_FAILURE","CV_REQUEST","CV_SUCCESS","CV_FAILURE","APPLY_PROJECT_REQUEST","APPLY_PROJECT_SUCCESS","APPLY_PROJECT_FAILURE","UPDATE_STUDENT_REQUEST","UPDATE_STUDENT_SUCCESS","UPDATE_STUDENT_FAILURE","UPDATE_PASSWORD_REQUEST","UPDATE_PASSWORD_SUCCESS","UPDATE_PASSWORD_FAILURE","AVATAR_REQUEST","AVATAR_SUCCESS","AVATAR_FAILURE","saveUserState","studentData","hasOwnProperty","undefined","localStorage","setItem","JSON","stringify","initialProjectState","isFetching","initialLoginState","loggingIn","initialRegisterState","registering","initialStudentState","name","email","password","roll","phone","yearOfStudy","cvUploaded","cvURL","appliedProjects","initialCVState","isUploading","initialAvatarState","initialUpdateState","isUpdating","uploadReducer","combineReducers","cvState","action","avatarState","studentReducer","studentDataWithAvatar","avatarURL","studentDataWithCV","updatedAppliedProjects","updatedState","updatedStudentData","uploadState","updateInfoState","rootReducer","loginData","registerData","student","projects","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","persistedState","persistedStateSerialized","getItem","parse","loadPersistedState","store","createStore","applyMiddleware","thunk","loginStudent","dataToPost","handleSuccess","handleError","post","Error","errorMsg","msg","err","registerStudent","logoutStudent","get","uploadRequest","toUpperCase","uploadSuccess","uploadFailure","upload","file","makeFormdataAndUpload","fd","FormData","append","S3SignedPolicyObject","bucketAcl","encodedPolicy","amzCred","expirationStrClean","sign","filename","bucketWriteUrl","bucket","getState","_id","replace","pop","URL","applyToProject","updateStudentData","dataToUpdate","updated","useBreakpoint","Grid","Text","Typography","Projects","screen","useSelector","selectedProjects","useDispatch","useEffect","handleApply","projectTitle","Modal","confirm","title","SmileOutlined","icon","content","onOk","openAntdNotification","centered","showConfirmation","info","FileDoneOutlined","EmptyList","style","textAlign","marginTop","fontSize","strong","TeamOutlined","ThunderboltOutlined","size","itemLayout","locale","emptyText","loading","dataSource","project","includes","renderItem","Item","paddingTop","paddingBottom","paddingLeft","hoverable","onClick","e","target","innerText","tagName","maxHeight","md","innerHeight","overflowY","width","innerWidth","zIndex","okText","maskClosable","extra","CheckOutlined","color","justify","xs","span","marginBottom","UserOutlined","mentorName","mentorDesignation","teamMembersRequired","SolutionOutlined","jobProfiles","map","profile","margin","key","skillsRequired","skill","whiteSpace","TabPane","Tabs","ClickAdviser","paddingRight","ProjectContainer","overflow","tabBarExtraContent","tab","ProjectOutlined","StarOutlined","AvatarUploader","useState","avatar","setAvatar","uploadButton","LoadingOutlined","PlusOutlined","rotate","customRequest","listType","className","multiple","showUploadList","beforeUpload","isJpgOrPng","isLt2M","layouts","halfInLarge","sm","lg","oneFourthInLarge","threeFourthInLarge","oneThirdInLarge","compareFields","initialValues","newValues","onlyNewValues","field","Object","keys","length","Option","Select","EditInfoModal","visible","setVisible","noChanges","setNoChanges","onInfoFinish","changes","setTimeout","footer","destroyOnClose","closable","layout","onFinish","gutter","label","NumberOutlined","BankOutlined","validateFirst","PhoneOutlined","rules","pattern","RegExp","max","min","prefix","CalendarOutlined","id","value","trigger","htmlType","passwords","updateStudentPassword","required","KeyOutlined","Password","Title","Link","StudentMenu","fileList","updateFileList","editModalVisible","setEditModalVisible","history","useHistory","handleLogout","removeItem","push","handleUpload","originFileObj","uploadProps","accept","isLt8M","onChange","index","src","alt","borderRadius","level","branch","CheckCircleTwoTone","twoToneColor","href","marginLeft","UploadOutlined","FilePdfOutlined","EditOutlined","danger","LogoutOutlined","Content","Layout","Header","StudentDashboard","headerHeight","setHeaderHeight","menuVisibile","setMenuVisibility","useLayoutEffect","height","getElementsByTagName","clientHeight","background","position","top","left","boxShadow","padding","align","alignItems","justifyContent","display","CloseOutlined","MenuOutlined","prevState","mask","mentorActionTypes","SELECT_STUDENT_REQUEST","SELECT_STUDENT_SUCCESS","SELECT_STUDENT_FAILURE","SHORTLIST_STUDENT_REQUEST","SHORTLIST_STUDENT_SUCCESS","SHORTLIST_STUDENT_FAILURE","GET_STUDENTS_REQUEST","GET_STUDENTS_SUCCESS","GET_STUDENTS_FAILURE","GET_AVATAR_REQUEST","GET_AVATAR_SUCCESS","GET_AVATAR_FAILURE","saveMentorState","mentorData","initialMentorState","num","mentor","updatedStudent","projectCode","appliedStudents","studentCode","status","updatedStudents","updatedProject","updatedProjects","updatedMentor","updatedMentorWithAvatar","rootReducerMentor","persistedStateMentor","loadPersistedMentorState","checkStatus","selectedStudents","shortlistedStudents","s","loginMentor","res2","toLowerCase","join","selectStudentRequest","selectStudentSuccess","selectStudentFailure","shortlistStudentRequest","shortlistStudentSuccess","shortlistStudentFailure","mentorLogoutRequest","mentorLogoutSuccess","mentorLogoutFailure","logoutMentor","getStudentsRequest","getStudentsSuccess","getStudentsFailure","getStudents","res1","res3","res4","updatedAppliedStudents","getAvatarRequest","getAvatarSuccess","getAvatarFailure","Statistics","statisticsState","setStatisticsState","selected","shortlisted","statisticsChecker","precision","valueStyle","minHeight","CheckCircleOutlined","Application","appType","ConfirmPopup","studentMail","selectStudent","shortlistStudent","onConfirm","onCancel","cancel","cancelText","disabled","shape","block","setState","backgroundColor","onClose","Paragraph","Project","defaultActiveKey","ellipsis","rows","expandable","symbol","jusify","offset","RiseOutlined","bordered","subTitle","UserAddOutlined","Greetings","xl","ChangePasswordModal","updateMentorPassword","mentorID","SubMenu","Menu","Structure","visibleMenu","setVisibleMenu","onMenuClose","visibleProfile","setVisibleProfile","visibleAvatarUpdater","setVisibleAvatarUpdater","showProfileDrawer","mentorAvatar","getAvatar","drawerStyle","theme","defaultSelectedKeys","mode","inlineIndent","HomeOutlined","designation","MenuUnfoldOutlined","cursor","float","exact","path","MentorDashboard","Step","Steps","ForgotLoginModal","currentStep","setCurrentStep","setLoading","setEmail","onEmailFinish","values","success","onPasswordFinish","current","MailOutlined","preserve","validateTrigger","Login","forgotPasswordModalVisbility","setForgotPasswordModalVisbility","flex","lineHeight","fontWeight","onFinishFailed","errorInfo","VerificationModal","formValues","verificationCode","verificationToken","RegisterForm","Form","useForm","form","isVerifyModalVisible","setVerificationModalVisibility","setFormValues","validateFields","dependencies","hasFeedback","getFieldValue","validator","rule","endsWith","Promise","reject","resolve","placeholder","NotFound","ECellFooter","developers","developerDetails","developer","whatsappNum","profileURL","WhatsAppOutlined","copyable","tooltips","Footer","App","storeMentor","LoginMentor","find","url","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.c5d7012f.chunk.js","sourcesContent":["const getCookieToken = () => {\n    \n    if (!document.cookie) return null;\n\n    const token = document.cookie\n        .split(\";\")\n        // Note: This `token` starts with a whitespace. Hence the trim method in the filtering.\n        .filter((str) => str.trim().startsWith(\"ECELL_LOGGED_IN\"))[0];\n\n    if (!token) return null;\n\n    const tokenVal = token.split(\"=\")[1];\n    return tokenVal;\n};\n\nexport default getCookieToken;","import React from \"react\";\nimport { Route, Redirect } from \"react-router-dom\";\nimport getCookieToken from \"../utils/getCookieToken\";\n\nconst PrivateRoute = (props) => {\n    const { children, component: Component, redirectTo, ...rest } = props;\n    const userType = getCookieToken();\n    const isLoggedIn = userType === \"mentor\" || userType === \"student\";\n\n    return (\n        <Route\n            {...rest}\n            render={({ location }) => {\n                if (isLoggedIn) {\n                    return children || <Component />;\n                } else {\n                    return (\n                        <Redirect\n                            to={{\n                                pathname: redirectTo,\n                                state: { from: location },\n                            }}\n                        />\n                    );\n                }\n            }}\n        />\n    );\n};\n\nconst PublicRoute = (props) => {\n    const { children, component: Component, ...rest } = props;\n    const userType = getCookieToken();\n    const isLoggedIn = userType === \"mentor\" || userType === \"student\";\n\n    return (\n        <Route\n            {...rest}\n            render={() => {\n                if (isLoggedIn) {\n                    return <Redirect to={`/${userType}-dashboard`} />;\n                } else {\n                    return children || <Component />;\n                }\n            }}\n        />\n    );\n};\n\nexport { PrivateRoute, PublicRoute };\n","import { notification } from \"antd\";\n\n/**\n * Open up an Antd notification\n * @param {('error'|'warning'|'success')} type - The type of notification.\n * @param {string | import(\"react\").ReactNode} message - The main error message. It's the notification title of the notification.\n * @param {string | import(\"react\").ReactNode} description - The error description.\n */\n\nconst openNotification = (type, message, description = \"\") => {\n    if (type !== \"error\" && type !== \"warning\" && type !== \"success\") return;\n\n    notification[type]({\n        message,\n        description,\n        placement: \"bottomRight\",\n        duration: type === \"error\" ? 0 : 5,\n    });\n};\n\nexport default openNotification;\n","const projectActionTypes = {\n    FETCH_PROJECTS_REQUEST: \"FETCH_PROJECTS_REQUEST\",\n    FETCH_PROJECTS_SUCCESS: \"FETCH_PROJECTS_SUCCESS\",\n    FETCH_PROJECTS_FAILURE: \"FETCH_PROJECTS_FAILURE\",\n\n    UPDATE_PROJECT_REQUEST: \"UPDATE_PROJECT_REQUEST\",\n    UPDATE_PROJECT_SUCCESS: \"UPDATE_PROJECT_SUCCESS\",\n    UPDATE_PROJECT_FAILURE: \"UPDATE_PROJECT_FAILURE\",\n};\n\nexport default projectActionTypes;","import Axios from \"axios\";\nimport projectActionTypes from \"./projectActionTypes\";\n\nconst axios = Axios.create({\n    baseURL: \"https://ecell.iitm.ac.in/data\",\n    withCredentials: true,\n});\n\nconst fetchProjectRequest = () => ({\n    type: projectActionTypes.FETCH_PROJECTS_REQUEST,\n});\n\nconst fetchProjectSuccess = (data) => ({\n    type: projectActionTypes.FETCH_PROJECTS_SUCCESS,\n    payload: data,\n});\nconst fetchProjectFailure = (err) => ({\n    type: projectActionTypes.FETCH_PROJECTS_FAILURE,\n    payload: err,\n});\n\nexport const fetchProjects = () => {\n    return async (dispatch) => {\n        dispatch(fetchProjectRequest());\n        try {\n            let response = await axios.get(`/team-up-portal/projects?for=student`);\n            dispatch(fetchProjectSuccess(response.data));\n        } catch (err) {\n            let error = err.response ? err.response.data : err;\n            // let errorMsg = error.data ? error.data.msg : error.message;\n            dispatch(fetchProjectFailure(error));\n        }\n    };\n};\n\nconst updateProjectRequest = () => ({\n    type: projectActionTypes.UPDATE_PROJECT_REQUEST,\n});\n\nconst updateProjectSuccess = (data) => ({\n    type: projectActionTypes.UPDATE_PROJECT_SUCCESS,\n    payload: data,\n});\nconst updateProjectFailure = (err) => ({\n    type: projectActionTypes.UPDATE_PROJECT_FAILURE,\n    payload: err,\n});\n\nexport const updateProject = (projectID) => {\n    return async (dispatch) => {\n        dispatch(updateProjectRequest());\n        try {\n            const res = await axios.put(`/team-up-portal/update-project-info/apply`, { projectID });\n            const { studentID } = res.data;\n            dispatch(updateProjectSuccess({ studentID, projectID }));\n\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(updateProjectFailure(error));\n        }\n    };\n};\n","const studentActionTypes = {\n    REGISTER_REQUEST: \"STUDENT_REGISTER_REQUEST\",\n    REGISTER_SUCCESS: \"STUDENT_REGISTER_SUCCESS\",\n    REGISTER_FAILURE: \"STUDENT_REGISTER_FAILURE\",\n\n    LOGIN_REQUEST: \"STUDENT_LOGIN_REQUEST\",\n    LOGIN_SUCCESS: \"STUDENT_LOGIN_SUCCESS\",\n    LOGIN_FAILURE: \"STUDENT_LOGIN_FAILURE\",\n\n    LOGOUT_REQUEST: \"STUDENT_LOGOUT_REQUEST\",\n    LOGOUT_SUCCESS: \"STUDENT_LOGOUT_SUCCESS\",\n    LOGOUT_FAILURE: \"STUDENT_LOGOUT_FAILURE\",\n\n    CV_REQUEST: \"UPLOAD_CV_REQUEST\",\n    CV_SUCCESS: \"UPLOAD_CV_SUCCESS\",\n    CV_FAILURE: \"UPLOAD_CV_FAILURE\",\n\n    APPLY_PROJECT_REQUEST: \"APPLY_PROJECT_REQUEST\",\n    APPLY_PROJECT_SUCCESS: \"APPLY_PROJECT_SUCCESS\",\n    APPLY_PROJECT_FAILURE: \"APPLY_PROJECT_FAILURE\",\n\n    UPDATE_STUDENT_REQUEST: \"UPDATE_STUDENT_REQUEST\",\n    UPDATE_STUDENT_SUCCESS: \"UPDATE_STUDENT_SUCCESS\",\n    UPDATE_STUDENT_FAILURE: \"UPDATE_STUDENT_FAILURE\",\n\n    UPDATE_PASSWORD_REQUEST: \"UPDATE_PASSWORD_REQUEST\",\n    UPDATE_PASSWORD_SUCCESS: \"UPDATE_PASSWORD_SUCCESS\",\n    UPDATE_PASSWORD_FAILURE: \"UPDATE_PASSWORD_FAILURE\",\n\n    AVATAR_REQUEST: \"UPDATE_AVATAR_REQUEST\",\n    AVATAR_SUCCESS: \"UPDATE_AVATAR_SUCCESS\",\n    AVATAR_FAILURE: \"UPDATE_AVATAR_FAILURE\",\n};\n\nexport default studentActionTypes;\n","export const loadPersistedState = () => {\n    try {\n        let persistedStateSerialized = localStorage.getItem(\"studentData\");\n        if (persistedStateSerialized) {\n            let persistedState = JSON.parse(persistedStateSerialized);\n            return { student: { data: persistedState } };\n        } else return undefined;\n    } catch (error) {\n        return undefined;\n    }\n};\n\nexport const saveUserState = async (studentData) => {\n    try {\n        if (!studentData.hasOwnProperty(\"_id\")) {\n            // Ugly hack to tell the function not to store data if there is no actual data\n            // I could do this from an ACTION but let's see\n            return undefined;\n        }\n        localStorage.setItem(\"studentData\", JSON.stringify(studentData));\n    } catch (error) {\n        console.log(error);\n        return undefined;\n    }\n};\n","import studentActionTypes from \"../student/studentActionTypes\";\nimport projectActionTypes from \"./projectActionTypes\";\n\nconst initialProjectState = {\n    isFetching: false,\n    data: [],\n    error: \"\",\n};\n\nexport const projectDataReducer = (state = initialProjectState, action) => {\n    switch (action.type) {\n        case projectActionTypes.FETCH_PROJECTS_REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case projectActionTypes.FETCH_PROJECTS_SUCCESS:\n            return {\n                isFetching: false,\n                data: action.payload.data,\n                error: \"\",\n            };\n        case projectActionTypes.FETCH_PROJECTS_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.payload,\n            };\n        case projectActionTypes.UPDATE_PROJECT_REQUEST:\n            return {\n                ...state,\n                isFetching: true,\n            };\n        case projectActionTypes.UPDATE_PROJECT_SUCCESS:\n            return {\n                ...state,\n                isFetching: false,\n            };\n        case projectActionTypes.UPDATE_PROJECT_FAILURE:\n            return {\n                ...state,\n                isFetching: false,\n                error: action.payload,\n            };\n        case studentActionTypes.LOGOUT_SUCCESS:\n            return initialProjectState;\n        \n        default:\n            return state;\n    }\n};\n","export const initialLoginState = {\n    loggingIn: false,\n    error: {},\n};\n\nexport const initialRegisterState = {\n    registering: false,\n    error: {},\n};\nexport const initialStudentState = {\n    name: \"\",\n    email: \"\",\n    password: \"\",\n    roll: \"\",\n    phone: \"\",\n    yearOfStudy: \"\",\n    cvUploaded: false,\n    cvURL: \"\",\n    appliedProjects: [],\n};\n\nexport const initialCVState = {\n    isUploading: false,\n    data: {},\n    error: {},\n};\n\nexport const initialAvatarState = {\n    isUploading: false,\n    data: {},\n    error: {},\n};\n\nexport const initialUpdateState = {\n    isUpdating: false,\n    data: {},\n    error: {},\n};\n","import { combineReducers } from \"redux\";\nimport { projectDataReducer } from \"./projects/projectReducer\";\nimport {\n    cvReducer,\n    avatarReducer,\n    loginReducer,\n    registerReducer,\n    studentDataReducer,\n    updateInfoReducer,\n} from \"./student/studentReducers\";\n\nconst uploadReducer = combineReducers({\n    cvState: cvReducer,\n    avatarState: avatarReducer,\n});\n\nconst studentReducer = combineReducers({\n    data: studentDataReducer,\n    uploadState: uploadReducer,\n    updateInfoState: updateInfoReducer,\n});\n\nconst rootReducer = combineReducers({\n    loginData: loginReducer,\n    registerData: registerReducer,\n    student: studentReducer,\n    projects: projectDataReducer,\n});\n\nexport default rootReducer;\n","import studentActionTypes from \"./studentActionTypes\";\nimport {\n    initialLoginState,\n    initialRegisterState,\n    initialStudentState,\n    initialAvatarState,\n    initialCVState,\n    initialUpdateState,\n} from \"./initialStudentStates\";\nimport { saveUserState } from \"../loadPersistedState\";\n\nexport const loginReducer = (state = initialLoginState, action) => {\n    switch (action.type) {\n        case studentActionTypes.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                error: {},\n            };\n        case studentActionTypes.LOGIN_SUCCESS:\n            return {\n                loggingIn: false,\n                error: {},\n            };\n        case studentActionTypes.LOGIN_FAILURE:\n            return {\n                loggingIn: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const registerReducer = (state = initialRegisterState, action) => {\n    switch (action.type) {\n        case studentActionTypes.REGISTER_REQUEST:\n            return {\n                registering: true,\n                error: {},\n            };\n        case studentActionTypes.REGISTER_SUCCESS:\n            return {\n                registering: false,\n                error: {},\n            };\n        case studentActionTypes.REGISTER_FAILURE:\n            return {\n                registering: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const cvReducer = (state = initialCVState, action) => {\n    switch (action.type) {\n        case studentActionTypes.CV_REQUEST:\n            return {\n                ...state,\n                isUploading: true,\n            };\n        case studentActionTypes.CV_SUCCESS:\n            return {\n                ...state,\n                isUploading: false,\n            };\n        case studentActionTypes.CV_FAILURE:\n            return {\n                isUploading: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\nexport const avatarReducer = (state = initialAvatarState, action) => {\n    switch (action.type) {\n        case studentActionTypes.AVATAR_REQUEST:\n            return {\n                ...state,\n                isUploading: true,\n            };\n        case studentActionTypes.AVATAR_SUCCESS:\n            return {\n                ...state,\n                isUploading: false,\n            };\n        case studentActionTypes.AVATAR_FAILURE:\n            return {\n                isUploading: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const updateInfoReducer = (state = initialUpdateState, action) => {\n    switch (action.type) {\n        case studentActionTypes.UPDATE_STUDENT_REQUEST:\n        case studentActionTypes.UPDATE_PASSWORD_REQUEST:\n            return {\n                ...state,\n                isUpdating: true,\n            };\n\n        case studentActionTypes.UPDATE_STUDENT_SUCCESS:\n        case studentActionTypes.UPDATE_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                isUpdating: false,\n            };\n\n        case studentActionTypes.UPDATE_STUDENT_FAILURE:\n        case studentActionTypes.UPDATE_PASSWORD_FAILURE:\n            return {\n                isUpdating: false,\n                error: { ...action.payload },\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const studentDataReducer = (state = initialStudentState, action) => {\n    switch (action.type) {\n        case studentActionTypes.LOGIN_SUCCESS:\n            saveUserState(action.payload.data);\n            return {\n                ...action.payload.data,\n            };\n        case studentActionTypes.REGISTER_SUCCESS:\n            saveUserState(action.payload.data);\n            return {\n                ...action.payload.data,\n            };\n        case studentActionTypes.LOGOUT_SUCCESS:\n            return initialStudentState;\n\n        case studentActionTypes.AVATAR_SUCCESS:\n            let studentDataWithAvatar = { ...state, avatarURL: action.payload };\n            saveUserState(studentDataWithAvatar);\n            return studentDataWithAvatar;\n\n        case studentActionTypes.CV_SUCCESS:\n            let studentDataWithCV = { ...state, cvURL: action.payload, cvUploaded: true };\n            saveUserState(studentDataWithCV);\n            return studentDataWithCV;\n\n        case studentActionTypes.APPLY_PROJECT_SUCCESS:\n            let updatedAppliedProjects = [...state.appliedProjects, action.payload.projectID];\n            const updatedState = { ...state, appliedProjects: updatedAppliedProjects };\n\n            saveUserState(updatedState);\n            return updatedState;\n\n        case studentActionTypes.UPDATE_STUDENT_SUCCESS:\n            let updatedStudentData = { ...state, ...action.payload };\n            saveUserState(updatedStudentData);\n            return updatedStudentData;\n        default:\n            return state;\n    }\n};\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { loadPersistedState } from \"./loadPersistedState\";\n\nimport rootReducer from \"./rootReducer\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistedState = loadPersistedState();\n\nconst store = createStore(rootReducer, persistedState, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import Axios from \"axios\";\nimport studentActionTypes from \"./studentActionTypes\";\nimport store from \"../store\";\nimport { updateProject } from \"../projects/projectActions\";\nimport getCookieToken from \"../../utils/getCookieToken\";\n\nconst axios = Axios.create({\n    baseURL: \"https://ecell.iitm.ac.in/data/team-up-portal\",\n    withCredentials: true,\n});\n\nconst studentLoginRequest = () => ({\n    type: studentActionTypes.LOGIN_REQUEST,\n});\n\nconst studentLoginSuccess = (data) => ({\n    type: studentActionTypes.LOGIN_SUCCESS,\n    payload: data,\n});\nconst studentLoginFailure = (err) => ({\n    type: studentActionTypes.LOGIN_FAILURE,\n    payload: err,\n});\n\nexport const loginStudent = (dataToPost, handleSuccess, handleError) => {\n    return async (dispatch) => {\n        dispatch(studentLoginRequest());\n        try {\n            let res = await axios.post(`/login`, dataToPost);\n            if (getCookieToken()) {\n                dispatch(studentLoginSuccess(res.data));\n                handleSuccess();\n            } else throw new Error(\"An error occured.\");\n        } catch (error) {\n            console.log(error);\n            let errorMsg = error.response ? error.response.data.msg : error.message;\n            dispatch(studentLoginFailure(error.response ? error.response.data : error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst studentRegisterRequest = () => ({\n    type: studentActionTypes.REGISTER_REQUEST,\n});\n\nconst studentRegisterSuccess = (data) => ({\n    type: studentActionTypes.REGISTER_SUCCESS,\n    payload: data,\n});\nconst studentRegisterFailure = (err) => ({\n    type: studentActionTypes.REGISTER_FAILURE,\n    payload: err,\n});\n\nexport const registerStudent = (dataToPost, handleSuccess, handleError) => {\n    return async (dispatch) => {\n        dispatch(studentRegisterRequest());\n\n        try {\n            let res = await axios.post(\"/register-participant\", dataToPost);\n            dispatch(studentRegisterSuccess(res.data));\n            handleSuccess();\n        } catch (err) {\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.msg ? error.msg : error.message;\n            dispatch(studentRegisterFailure(error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst studentLogoutRequest = () => ({\n    type: studentActionTypes.LOGOUT_REQUEST,\n});\n\nconst studentLogoutSuccess = () => ({\n    type: studentActionTypes.LOGOUT_SUCCESS,\n});\nconst studentLogoutFailure = (err) => ({\n    type: studentActionTypes.LOGOUT_FAILURE,\n    payload: err,\n});\n\nexport const logoutStudent = (handleSuccess, handleError) => {\n    return async (dispatch) => {\n        dispatch(studentLogoutRequest());\n        try {\n            await axios.get(`/logout/student`);\n            handleSuccess();\n            dispatch(studentLogoutSuccess());\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.response ? error.response.data.msg : error.message;\n            dispatch(studentLogoutFailure(error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst uploadRequest = (type) => ({\n    type: studentActionTypes[`${type.toUpperCase()}_REQUEST`],\n});\n\nconst uploadSuccess = (type, data) => ({\n    type: studentActionTypes[`${type.toUpperCase()}_SUCCESS`],\n    payload: data,\n});\n\nconst uploadFailure = (type, err) => ({\n    type: studentActionTypes[`${type.toUpperCase()}_FAILURE`],\n    payload: err,\n});\n/**\n *\n * @param {string} type\n * @param {File} file\n */\nexport const upload = (type, file, handleSuccess = () => {}, handleError = () => {}) => {\n    return async (dispatch) => {\n        dispatch(uploadRequest(type));\n        try {\n            const res = await axios.get(`/s3-signed-policy/team-up-student-${type}s`);\n\n            let S3SignedPolicyObject = { ...res.data.data };\n            let bucketWriteUrl = `https://${S3SignedPolicyObject.bucket}.s3.ap-south-1.amazonaws.com/`;\n\n            const { _id: studentID, name, roll } = store.getState().student.data;\n            const filename = `${name.replace(/ /g, \"\")}-${roll}-${type.toUpperCase()}.${file.name.split(\".\").pop()}`;\n\n            async function makeFormdataAndUpload() {\n                var fd = new FormData();\n\n                fd.append(\"x-amz-algorithm\", \"AWS4-HMAC-SHA256\");\n                fd.append(\"acl\", S3SignedPolicyObject.bucketAcl);\n                fd.append(\"policy\", S3SignedPolicyObject.encodedPolicy);\n                fd.append(\"x-amz-credential\", S3SignedPolicyObject.amzCred);\n                fd.append(\"x-amz-date\", S3SignedPolicyObject.expirationStrClean);\n                fd.append(\"X-Amz-Signature\", S3SignedPolicyObject.sign);\n\n                fd.append(\"key\", filename);\n                fd.append(\"Content-Type\", file.type);\n\n                fd.append(\"file\", file);\n\n                await axios.post(bucketWriteUrl, fd, { withCredentials: false });\n            }\n            await makeFormdataAndUpload();\n\n            let URL = `${bucketWriteUrl}${filename}`;\n\n            await axios.put(`/update-student-info/${type}`, { studentID, [`${type}URL`]: URL });\n\n            dispatch(uploadSuccess(type, URL));\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.response ? error.response.data.msg : error.message;\n            dispatch(uploadFailure(type, error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst applyProjectRequest = () => ({\n    type: studentActionTypes.APPLY_PROJECT_REQUEST,\n});\n\nconst applyProjectSuccess = (data) => ({\n    type: studentActionTypes.APPLY_PROJECT_SUCCESS,\n    payload: data,\n});\n\nconst applyProjectFailure = (err) => ({\n    type: studentActionTypes.APPLY_PROJECT_FAILURE,\n    payload: err,\n});\n\nexport const applyToProject = (projectID, handleSuccess) => {\n    return async (dispatch) => {\n        dispatch(applyProjectRequest());\n\n        const studentID = store.getState().student.data._id;\n        try {\n            await axios.put(\"/update-student-info/project\", { studentID, projectID });\n\n            await dispatch(updateProject(projectID));\n            dispatch(applyProjectSuccess({ studentID, projectID }));\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(applyProjectFailure(error));\n        }\n    };\n};\n\nconst updateStudentDataRequest = () => ({\n    type: studentActionTypes.UPDATE_STUDENT_REQUEST,\n});\n\nconst updateStudentDataSuccess = (data) => ({\n    type: studentActionTypes.UPDATE_STUDENT_SUCCESS,\n    payload: data,\n});\n\nconst updateStudentDataFailure = (err) => ({\n    type: studentActionTypes.UPDATE_STUDENT_FAILURE,\n    payload: err,\n});\n\nexport const updateStudentData = (dataToUpdate, handleError, handleSuccess) => {\n    return async (dispatch) => {\n        dispatch(updateStudentDataRequest());\n\n        try {\n            const updated = await axios.put(\"/update-student-info/data\", { dataToUpdate });\n            dispatch(updateStudentDataSuccess(updated.data.data));\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(updateStudentDataFailure(error));\n            handleError(error.msg);\n            console.log(error);\n        }\n    };\n};\n\nconst updatePasswordRequest = () => ({\n    type: studentActionTypes.UPDATE_PASSWORD_REQUEST,\n});\n\nconst updatePasswordSuccess = () => ({\n    type: studentActionTypes.UPDATE_PASSWORD_SUCCESS,\n});\n\nconst updatePasswordFailure = (err) => ({\n    type: studentActionTypes.UPDATE_PASSWORD_FAILURE,\n    payload: err,\n});\n\nexport const updateStudentPassword = (passwords, handleError, handleSuccess) => {\n    return async (dispatch) => {\n        dispatch(updatePasswordRequest());\n\n        try {\n            await axios.put(\"/update-student-info/password\", { passwords });\n\n            dispatch(updatePasswordSuccess());\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(updatePasswordFailure(error));\n            handleError(error.msg);\n            console.log(error);\n        }\n    };\n};\n","import React, { useEffect } from \"react\";\nimport { Grid, List, Card, Button, Typography, Row, Col, Tag, Modal } from \"antd\";\nimport {\n    ThunderboltOutlined,\n    CheckOutlined,\n    TeamOutlined,\n    UserOutlined,\n    SolutionOutlined,\n    SmileOutlined,\n    FileDoneOutlined,\n} from \"@ant-design/icons\";\nimport openAntdNotification from \"../../utils/openAntdNotification\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { fetchProjects } from \"../../redux/projects/projectActions\";\nimport { applyToProject } from \"../../redux/student/studentActions\";\n\nconst { useBreakpoint } = Grid;\nconst { Text } = Typography;\n\nconst Projects = ({ filter = \"none\" }) => {\n    const screen = useBreakpoint();\n\n    const projects = useSelector((state) => state.projects.data);\n    const isFetching = useSelector((state) => state.projects.isFetching);\n\n    const { appliedProjects, selectedProjects, cvUploaded } = useSelector((state) => state.student.data);\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n        dispatch(fetchProjects());\n    }, [dispatch]);\n\n    const showConfirmation = (projectID, projectTitle) => {\n        Modal.confirm({\n            title: (\n                <span>\n                    Confirm your application <SmileOutlined />\n                </span>\n            ),\n            icon: null,\n            content: (\n                <span>\n                    Your CV will be made accessible to the project leader of this project: <strong>{projectTitle}</strong>.\n                    <br />\n                    <Text type=\"secondary\">Note that once applied, you cannot revert your action.</Text>\n                </span>\n            ),\n            onOk: async () => {\n                dispatch(applyToProject(projectID, handleSuccess));\n                function handleSuccess() {\n                    openAntdNotification(\n                        \"success\",\n                        `Successfully applied to project: ${projectTitle}`,\n                        <span>\n                            Keep an eye on the <strong>Selected</strong> tab!\n                        </span>\n                    );\n                }\n            },\n            centered: true,\n        });\n    };\n\n    const showAlertToUploadCV = () => {\n        Modal.info({\n            title: \"Please upload your CV\",\n            icon: <FileDoneOutlined />,\n            content:\n                \"You need to upload your CV from the menu in order to apply. CVs will be used by project leaders to select you so make sure to make a good impression!\",\n            centered: true,\n        });\n    };\n\n    const handleApply = (projectID, projectTitle) => {\n        if (cvUploaded) {\n            showConfirmation(projectID, projectTitle);\n        } else {\n            showAlertToUploadCV();\n        }\n    };\n\n    const showPostDescriptionModal = (target, title, description) => {\n        // Escape clicks from the \"Apply\" button\n        if ((target.innerText === \"Apply\" && target.tagName === \"SPAN\") || target.tagName === \"BUTTON\") return;\n\n        Modal.info({\n            title,\n            // Magic numbers: 200 and 500. Felt clever, might change later\n            content: (\n                <div style={{ maxHeight: !screen.md ? window.innerHeight - 200 : 500, overflowY: \"auto\" }}>\n                    {description}\n                </div>\n            ),\n            icon: null,\n            width: !screen.md ? window.innerWidth : 768,\n            zIndex: 1010,\n            okText: \"Close\",\n            centered: true,\n            maskClosable: true,\n        });\n    };\n    const EmptyList = ({ filter }) => (\n        <div style={{ textAlign: \"center\", marginTop: \"3rem\" }}>\n            {filter === \"applied\" ? (\n                <>\n                    <SmileOutlined style={{ fontSize: \"3rem\" }} />\n                    <br />\n                    <Text type=\"secondary\" strong>\n                        You haven't applied for any projects.\n                    </Text>\n                    <br />\n                    <Text type=\"secondary\">\n                        Apply now from the <strong>All</strong> tab.\n                    </Text>\n                </>\n            ) : filter === \"selected\" ? (\n                <>\n                    <TeamOutlined style={{ fontSize: \"3rem\" }} />\n                    <br />\n                    <Text type=\"secondary\" strong>\n                        No selections yet.\n                    </Text>\n                    <br />\n                    <Text type=\"secondary\"> Please check back later!</Text>\n                </>\n            ) : (\n                <>\n                    <ThunderboltOutlined style={{ fontSize: \"3rem\" }} />\n                    <br />\n                    <Text type=\"secondary\" strong>\n                        Seems like you applied for all the projects!\n                    </Text>\n                    <br />\n                    <Text type=\"secondary\">\n                        Keep an eye on the <strong>Selected</strong> tab\n                    </Text>\n                </>\n            )}\n        </div>\n    );\n    return (\n        <List\n            size=\"large\"\n            itemLayout=\"horizontal\"\n            locale={{ emptyText: <EmptyList filter={filter} /> }}\n            loading={isFetching}\n            dataSource={\n                filter === \"none\"\n                    ? projects.filter(\n                          (project) => !appliedProjects.includes(project._id) && !selectedProjects.includes(project._id)\n                      )\n                    : filter === \"applied\"\n                    ? projects.filter((project) => appliedProjects.includes(project._id))\n                    : projects.filter((project) => selectedProjects.includes(project._id))\n            }\n            renderItem={(project) => (\n                <List.Item style={{ paddingTop: \"8px\", paddingBottom: \"8px\", paddingLeft: \"0px\" }}>\n                    <Card\n                        title={project.title}\n                        hoverable\n                        onClick={(e) => showPostDescriptionModal(e.target, project.title, project.description)}\n                        extra={\n                            selectedProjects.includes(project._id) ? (\n                                <Text type=\"success\" strong>\n                                    <CheckOutlined /> Selected\n                                </Text>\n                            ) : appliedProjects.includes(project._id) ? (\n                                <Text strong style={{ color: \"#1890ff\" }}>\n                                    <CheckOutlined /> Applied\n                                </Text>\n                            ) : (\n                                <Button onClick={() => handleApply(project._id, project.title)}>Apply</Button>\n                            )\n                        }\n                        style={{ width: \"100%\" }}>\n                        <Row justify=\"center\">\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ marginBottom: \"1rem\" }}>\n                                <UserOutlined /> <Text strong>Project Leader</Text>\n                                <br />\n                                <Text>{project.mentorName}</Text>\n                                <br />\n                                <Text type=\"secondary\">{project.mentorDesignation}</Text>\n                            </Col>\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={{ marginBottom: \"1rem\" }}>\n                                <TeamOutlined /> <Text strong>Required Members</Text>\n                                <Text> : {project.teamMembersRequired} </Text>\n                            </Col>\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={!screen.md && { marginBottom: \"1rem\" }}>\n                                <SolutionOutlined /> <Typography.Text strong>Job Profiles</Typography.Text>\n                                <br />\n                                {project.jobProfiles.map((profile) => (\n                                    <Tag style={{ margin: \"0.2rem 0.2rem 0 0\" }} key={profile}>\n                                        {profile}\n                                    </Tag>\n                                ))}\n                            </Col>\n                            <Col xs={{ span: 24 }} md={{ span: 12 }} style={!screen.md && { marginBottom: \"1rem\" }}>\n                                <ThunderboltOutlined /> <Typography.Text strong>Required Skills</Typography.Text>\n                                <br />\n                                {project.skillsRequired.map((skill) => (\n                                    <Tag style={{ margin: \"0.2rem 0 0 0.2rem\", whiteSpace: \"pre-wrap\" }} key={skill}>\n                                        {skill}\n                                    </Tag>\n                                ))}\n                            </Col>\n                            {!screen.md && <Text type=\"secondary\">Tap to view details</Text>}\n                        </Row>\n                    </Card>\n                </List.Item>\n            )}\n        />\n    );\n};\n\nexport default Projects;\n","import React from \"react\";\nimport { Tabs } from \"antd\";\nimport { ProjectOutlined, CheckOutlined, StarOutlined } from \"@ant-design/icons\";\nimport Projects from \"./Projects\";\nconst { TabPane } = Tabs;\n\nconst ClickAdviser = () =>\n    window.innerWidth > 768 ? (\n        <span style={{ paddingRight: \"24px\" }}>\n            Click/Tap on a project to view details.\n        </span>\n    ) : null;\n\nconst ProjectContainer = () => {\n    return (\n        <Tabs size=\"large\" style={{ overflow: \"visible\" }} tabBarExtraContent={<ClickAdviser />}>\n            <TabPane\n                tab={\n                    <span>\n                        <ProjectOutlined />\n                        All\n                    </span>\n                }\n                key=\"1\">\n                <Projects />\n            </TabPane>\n            <TabPane\n                tab={\n                    <span>\n                        <CheckOutlined />\n                        Applied\n                    </span>\n                }\n                key=\"2\">\n                <Projects filter=\"applied\" />\n            </TabPane>\n            <TabPane\n                tab={\n                    <span>\n                        <StarOutlined />\n                        Selected\n                    </span>\n                }\n                key=\"3\">\n                <Projects filter=\"selected\" />\n            </TabPane>\n        </Tabs>\n    );\n};\n\nexport default ProjectContainer;\n","import React, { useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upload } from \"../../redux/student/studentActions\";\n\nconst AvatarUploader = () => {\n    const loading = useSelector((state) => state.student.uploadState.avatarState.isUploading);\n\n    const [avatar, setAvatar] = useState(null);\n    const dispatch = useDispatch();\n\n    function beforeUpload(file) {\n        const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n        if (!isJpgOrPng) {\n            message.error(\"You can only upload JPG/PNG file!\");\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error(\"Image must smaller than 2MB!\");\n        }\n        setAvatar(file);\n        return isJpgOrPng && isLt2M;\n    }\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload Avatar</div>\n        </div>\n    );\n    return (\n        <>\n            <ImgCrop rotate>\n                <Upload\n                    name=\"avatar\"\n                    customRequest={() => dispatch(upload(\"avatar\", avatar))}\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    multiple={false}\n                    showUploadList={false}\n                    beforeUpload={beforeUpload}>\n                    {/* {imageURL ? <img src={imageURL} alt=\"avatar\" style={{ width: \"100%\" }} /> : uploadButton} */}\n                    {uploadButton}\n                </Upload>\n            </ImgCrop>\n        </>\n    );\n};\n\nexport default AvatarUploader;\n","const layouts = {\n    halfInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 12 },\n        lg: { span: 12 },\n    },\n    oneFourthInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 6 },\n        lg: { span: 6 },\n    },\n    threeFourthInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 18 },\n        lg: { span: 18 },\n    },\n    oneThirdInLarge: {\n        xs: { span: 24 },\n        sm: { span: 24 },\n        md: { span: 8 },\n        lg: { span: 8 },\n    },\n};\n\nexport default layouts;\n","/**\n *\n * @param {object} initialValues\n * @param {object} newValues\n */\n\nconst compareFields = (initialValues, newValues) => {\n    // const changedFields = Object.keys(newValues).filter((field) => newValues[field] !== initialValues[field]);\n    // if (changedFields.length === 0) {\n    //     return null;\n    // }\n    // const onlyNewValues = changedFields.map((field) => ({ [field]: newValues[field] }));\n    const onlyNewValues = {};\n\n    for (const field in newValues) {\n        if (newValues[field] !== initialValues[field]) {\n            onlyNewValues[field] = newValues[field];\n        }\n    }\n\n    if (Object.keys(onlyNewValues).length === 0) return null;\n    return onlyNewValues;\n};\n\nexport default compareFields;\n","import React, { useState } from \"react\";\nimport { Row, Col, Form, Modal, Input, Button, Select, Tabs, Tooltip } from \"antd\";\nimport {\n    UserOutlined,\n    NumberOutlined,\n    CalendarOutlined,\n    PhoneOutlined,\n    BankOutlined,\n    KeyOutlined,\n    SmileOutlined,\n} from \"@ant-design/icons\";\nimport layouts from \"../../../utils/antd-layouts\";\nimport openAntdNotification from \"../../../utils/openAntdNotification\";\nimport compareFields from \"./compareFields\";\nimport { updateStudentData, updateStudentPassword } from \"../../../redux/student/studentActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst { Option } = Select;\nconst { TabPane } = Tabs;\n\nconst EditInfoModal = ({ initialValues, visible, setVisible }) => {\n    const dispatch = useDispatch();\n    const [noChanges, setNoChanges] = useState(false);\n    const isUpdating = useSelector((state) => state.student.updateInfoState.isUpdating);\n\n    const onInfoFinish = async (newValues) => {\n        const changes = compareFields(initialValues, newValues);\n        if (!changes) {\n            setNoChanges(true);\n\n            setTimeout(() => {\n                setNoChanges(false);\n            }, 3000);\n        } else {\n            const handleSuccess = () => {\n                openAntdNotification(\"success\", \"Information updated successfully\");\n            };\n\n            const handleError = (errorMsg) => {\n                openAntdNotification(\"error\", \"Error occured in updating info\", errorMsg);\n            };\n\n            dispatch(updateStudentData(changes, handleError, handleSuccess));\n            console.log(changes);\n        }\n    };\n\n    const onPasswordChange = (passwords) => {\n        const handleSuccess = () => {\n            openAntdNotification(\"success\", \"Password changed successfully\");\n        };\n        const handleError = (errorMsg) => {\n            openAntdNotification(\"error\", \"Error occured in changing password\", errorMsg);\n        };\n\n        dispatch(updateStudentPassword(passwords, handleError, handleSuccess));\n    };\n    return (\n        <Modal visible={visible} footer={null} destroyOnClose={true} closable={false} zIndex={1003}>\n            <Tabs>\n                <TabPane tab=\"USER INFO\" key=\"1\">\n                    <Form layout=\"vertical\" initialValues={initialValues} onFinish={onInfoFinish}>\n                        <Row gutter={24}>\n                            <Col span={24}>\n                                <Form.Item\n                                    name=\"name\"\n                                    label={\n                                        <span>\n                                            <UserOutlined /> Name\n                                        </span>\n                                    }>\n                                    <Input />\n                                </Form.Item>\n                            </Col>\n                            <Col {...layouts.halfInLarge}>\n                                <Form.Item\n                                    name=\"roll\"\n                                    label={\n                                        <span>\n                                            <NumberOutlined /> Roll no.\n                                        </span>\n                                    }>\n                                    <Input />\n                                </Form.Item>\n                            </Col>\n                            <Col {...layouts.halfInLarge}>\n                                <Form.Item\n                                    name=\"branch\"\n                                    label={\n                                        <span>\n                                            <BankOutlined /> Branch\n                                        </span>\n                                    }>\n                                    <Input />\n                                </Form.Item>\n                            </Col>\n                            <Col {...layouts.halfInLarge}>\n                                <Form.Item\n                                    name=\"phone\"\n                                    validateFirst={true}\n                                    label={\n                                        <span>\n                                            <PhoneOutlined /> Phone number\n                                        </span>\n                                    }\n                                    rules={[\n                                        {\n                                            type: \"string\",\n                                            message: \"Please enter a valid phone number.\",\n                                        },\n                                        {\n                                            pattern: new RegExp(/^[0-9][s./0-9]*$/g),\n                                            message: \"Please enter a valid phone number.\",\n                                        },\n                                        {\n                                            max: 10,\n                                            message: \"Please enter a valid phone number.\",\n                                        },\n                                        {\n                                            min: 10,\n                                            message: \"Please enter a valid phone number.\",\n                                        },\n                                    ]}>\n                                    <Input prefix=\"+91\" />\n                                </Form.Item>\n                            </Col>\n                            <Col {...layouts.halfInLarge}>\n                                <Form.Item\n                                    name=\"yearOfStudy\"\n                                    label={\n                                        <span>\n                                            <CalendarOutlined /> Year of study\n                                        </span>\n                                    }>\n                                    <Select id=\"yearOfStudy\">\n                                        <Option key=\"1st year\" value=\"1st year\">\n                                            1st year\n                                        </Option>\n                                        <Option key=\"2nd year\" value=\"2nd year\">\n                                            2nd year\n                                        </Option>\n                                        <Option key=\"3rd year\" value=\"3rd year\">\n                                            3rd year\n                                        </Option>\n                                        <Option key=\"4th year\" value=\"4th year\">\n                                            4th year\n                                        </Option>\n                                        <Option key=\"5th year\" value=\"5th year\">\n                                            5th year\n                                        </Option>\n                                        <Option key=\"PG/Ph.D\" value=\"PG/Ph.D\">\n                                            PG/Ph.D\n                                        </Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n\n                        <Row gutter={[12, 0]} justify=\"end\">\n                            <Col>\n                                <Button onClick={() => setVisible(false)}>Discard</Button>\n                            </Col>\n                            <Col>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Tooltip visible={noChanges} title=\"No changes to be made!\" trigger=\"focus\">\n                                        <Button type=\"primary\" htmlType=\"submit\" loading={isUpdating}>\n                                            Save Changes\n                                        </Button>\n                                    </Tooltip>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </TabPane>\n                <TabPane tab=\"CHANGE PASSWORD\">\n                    <Form layout=\"vertical\" onFinish={onPasswordChange}>\n                        <Form.Item\n                            name=\"newPassword\"\n                            extra={\n                                <span>\n                                    Keep it more than 6 letters. <SmileOutlined />\n                                </span>\n                            }\n                            rules={[\n                                {\n                                    min: 6,\n                                    message: \"Please input at least 6 characters.\",\n                                },\n                                {\n                                    required: true,\n                                    message: \"Please input a new password if you want to change your current one.\",\n                                },\n                            ]}\n                            label={\n                                <span>\n                                    <KeyOutlined /> New Password\n                                </span>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"currentPassword\"\n                            rules={[{ required: true, message: \"Please input your current password.\" }]}\n                            label={\n                                <span>\n                                    <KeyOutlined /> Current Password\n                                </span>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n                        <Row gutter={[12, 0]} justify=\"end\">\n                            <Col>\n                                <Button onClick={() => setVisible(false)}>Discard</Button>\n                            </Col>\n                            <Col>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\" loading={isUpdating}>\n                                        Change Password\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </TabPane>\n            </Tabs>\n        </Modal>\n    );\n};\n\nexport default EditInfoModal;\n","import React, { useState } from \"react\";\nimport { Upload, Button, Typography, Row, Col, Divider } from \"antd\";\nimport { UploadOutlined, FilePdfOutlined, LogoutOutlined, EditOutlined, CheckCircleTwoTone } from \"@ant-design/icons\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { logoutStudent, upload } from \"../../redux/student/studentActions\";\nimport AvatarUploader from \"./AvatarUploader\";\nimport EditInfoModal from \"./EditInfoModal/EditInfoModal\";\n\nconst { Title, Text, Link } = Typography;\n\nconst StudentMenu = () => {\n    const [fileList, updateFileList] = useState([]);\n    const [editModalVisible, setEditModalVisible] = useState(false);\n\n    const history = useHistory();\n\n    const studentData = useSelector((state) => state.student.data);\n    const cvState = useSelector((state) => state.student.uploadState.cvState);\n    const avatarURL = useSelector((state) => state.student.data.avatarURL);\n\n    const dispatch = useDispatch();\n\n    const handleLogout = async () => {\n        const handleSuccess = () => {\n            localStorage.removeItem(\"studentData\");\n            history.push(\"/login\");\n        };\n        const handleError = (errorMsg) => {\n            openNotification(\"error\", \"Error in logging out\", errorMsg);\n        };\n        dispatch(logoutStudent(handleSuccess, handleError));\n    };\n\n    const handleUpload = async () => {\n        let file = fileList[0].originFileObj;\n        console.log(file);\n\n        const handleSuccess = () => {\n            openNotification(\"success\", \"Successfully Updated CV\");\n            updateFileList([]);\n        };\n        const handleError = (errorMsg) => {\n            openNotification(\"error\", \"Error in logging out\", errorMsg);\n        };\n        await dispatch(upload(\"cv\", file, handleSuccess, handleError));\n    };\n    const uploadProps = {\n        fileList,\n        accept: \"application/pdf\",\n        beforeUpload: (file) => {\n            if (file.type !== \"application/pdf\") {\n                openNotification(\n                    \"error\",\n                    \"Please select a PDF file of size less than 8MB.\",\n                    `${file.name} is not a PDF file`\n                );\n                return false;\n            } else if (fileList.length === 1) {\n                openNotification(\"info\", \"You file was replaced with the newer one.\", \"File replaced.\");\n            }\n            const isLt8M = file.size / 1024 / 1024 > 8;\n            if (isLt8M) {\n                openNotification(\"error\", \"The PDF file must be within 8MB.\", \"Size error\");\n            }\n            return isLt8M;\n        },\n        onChange: (info) => {\n            updateFileList(\n                info.fileList.filter(\n                    (file, index) =>\n                        index === info.fileList.length - 1 &&\n                        file.type === \"application/pdf\" &&\n                        file.size / 1024 / 1024 < 8\n                )\n            );\n        },\n        multiple: false,\n    };\n    return (\n        <Row justify=\"center\">\n            <Col span={24} style={{ paddingTop: \"1em\", textAlign: \"center\" }}>\n                {avatarURL ? (\n                    <img src={avatarURL} alt={studentData.name} style={{ borderRadius: \"100%\", width: \"80%\" }} />\n                ) : (\n                    <AvatarUploader />\n                )}\n            </Col>\n            <Col span={24} style={{ paddingTop: \"1em\", textAlign: \"center\" }}>\n                <Title level={3} style={{ marginBottom: \"0.25rem\", width: \"100%\" }}>\n                    {studentData.name}\n                </Title>\n            </Col>\n            <Col span={24} style={{ textAlign: \"center\" }}>\n                <Title level={5} type=\"secondary\" style={{ marginTop: \"0\" }}>\n                    {studentData.email}\n                </Title>\n            </Col>\n            <Row justify=\"center\">\n                <Col span={12} style={{ marginBottom: \"1rem\" }}>\n                    <Text strong>Roll No.</Text>\n                    <br />\n                    <Text>{studentData.roll}</Text>\n                </Col>\n                <Col span={12} style={{ marginBottom: \"1rem\", textAlign: \"right\" }}>\n                    <Text strong>Year Of Study</Text>\n                    <br />\n                    <Text>{studentData.yearOfStudy}</Text>\n                </Col>\n                <Col span={12}>\n                    <Text strong>Branch</Text>\n                    <br />\n                    <Text>{studentData.branch}</Text>\n                </Col>\n                <Col span={12} style={{ textAlign: \"right\" }}>\n                    <Text strong>Contact no.</Text>\n                    <br />\n                    <Text>+91 {studentData.phone}</Text>\n                </Col>\n            </Row>\n            <Divider />\n            <>\n                {studentData.cvUploaded ? (\n                    <Row style={{ textAlign: \"center\" }}>\n                        <Col span={24}>\n                            <Text type=\"success\" strong>\n                                CV is uploaded.\n                            </Text>\n                            <CheckCircleTwoTone twoToneColor=\"#52c41a\" />\n                            <Link href={studentData.cvURL} target=\"_blank\" style={{ marginLeft: \"1em\" }}>\n                                View your CV\n                            </Link>\n                        </Col>\n                        <Col span={24} style={{ paddingTop: \"1em\" }}>\n                            <Upload {...uploadProps}>\n                                <Button type=\"primary\">Update CV</Button>\n                            </Upload>\n                            {fileList && fileList.length > 0 && (\n                                <Button onClick={handleUpload} loading={cvState.isUploading}>\n                                    <span>\n                                        <UploadOutlined /> Upload the selected file\n                                    </span>\n                                </Button>\n                            )}\n                        </Col>\n                    </Row>\n                ) : (\n                    <>\n                        <Upload {...uploadProps}>\n                            <Button>\n                                <span>\n                                    <FilePdfOutlined /> Select CV to upload\n                                </span>\n                            </Button>\n                            <div style={{ textAlign: \"center\" }}>\n                                <Typography.Text type=\"secondary\">PDF file less than 8MB.</Typography.Text>\n                            </div>\n                        </Upload>\n                        {fileList && fileList.length > 0 && (\n                            <Button onClick={handleUpload} loading={cvState.isUploading}>\n                                <span>\n                                    <UploadOutlined /> Upload the selected file\n                                </span>\n                            </Button>\n                        )}\n                    </>\n                )}\n            </>\n            <Divider />\n            <Row justify=\"space-between\" style={{ width: \"100%\" }}>\n                <Col>\n                    <Button icon={<EditOutlined />} onClick={() => setEditModalVisible(true)}>\n                        EDIT INFO\n                    </Button>\n                </Col>\n                <Col>\n                    <Button danger icon={<LogoutOutlined />} type=\"primary\" onClick={handleLogout}>\n                        LOG OUT\n                    </Button>\n                </Col>\n            </Row>\n            <EditInfoModal visible={editModalVisible} setVisible={setEditModalVisible} initialValues={studentData} />\n        </Row>\n    );\n};\n\nexport default StudentMenu;\n","import React, { useState, useEffect, useLayoutEffect } from \"react\";\nimport ProjectContainer from \"./ProjectContainer\";\nimport \"./StudentDashboard.css\";\nimport StudentMenu from \"./StudentMenu\";\nimport { Button, Col, Layout, Row, Typography, Drawer, Divider, Image } from \"antd\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch } from \"react-redux\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport { MenuOutlined, CloseOutlined, LogoutOutlined } from \"@ant-design/icons\";\nimport { logoutStudent } from \"../../redux/student/studentActions\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\n\nconst { Content, Header } = Layout;\nconst { Title } = Typography;\nconst StudentDashboard = () => {\n    const [headerHeight, setHeaderHeight] = useState(null);\n    const screen = useBreakpoint();\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const [menuVisibile, setMenuVisibility] = useState(false);\n\n    useLayoutEffect(() => {\n     if (screen.md) {\n         setMenuVisibility(true);\n     } else {\n         setMenuVisibility(false)\n     }\n    }, [screen.md])\n\n    const handleLogout = async () => {\n        const handleSuccess = () => {\n            localStorage.removeItem(\"studentData\");\n            history.push(\"/login\");\n        };\n        const handleError = (errorMsg) => {\n            openNotification(\"error\", \"Error in logging out\", errorMsg);\n        };\n        dispatch(logoutStudent(handleSuccess, handleError));\n    };\n\n    useEffect(() => {\n        let height = document.getElementsByTagName(\"header\")[0].clientHeight;\n        setHeaderHeight(height);\n    }, [headerHeight]);\n\n    return (\n        <>\n            <Header\n                style={{\n                    background: \"#fefefe\",\n                    zIndex: 1001,\n                    position: \"fixed\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    boxShadow: \"0px -1px 20px rgba(85, 85, 85, 0.2)\",\n                    padding:\"0 2em 0 2em\"\n                }}>\n                <Row align=\"middle\" justify=\"space-around\">\n                    <Col xs={{ span: 3 }} md={{ span: 1 }}>\n                        <Image src=\"https://ecell.iitm.ac.in/team_up-static/media/e-cell_logo_white.png\" alt=\"E-Cell Logo\" />\n                    </Col>\n                    <Col xs={{ span: 12 }} md={{ span: 16 }} style={{ textAlign: \"center\" }}>\n                        <Title level={2} style={{ marginBottom: 0 }}>\n                            TeamUp\n                        </Title>\n                    </Col>\n                    <Col\n                        md={{ span: 3 }}\n                        xs={{ span: 7 }}\n                        style={{\n                            textAlign: \"right\",\n                            alignItems: \"center\",\n                            justifyContent: \"space-between\",\n                            display: \"flex\",\n                        }}>\n                        <Button type=\"dashed\" icon={<LogoutOutlined />} onClick={handleLogout}>\n                            {screen.md && \"LOG OUT\"}\n                        </Button>\n                        <Divider type=\"vertical\" />\n                        <Button\n                            type=\"dashed\"\n                            icon={\n                                menuVisibile ? (\n                                    <CloseOutlined style={{ fontSize: \"1.5rem\" }} />\n                                ) : (\n                                    <MenuOutlined style={{ fontSize: \"1.5rem\" }} />\n                                )\n                            }\n                            onClick={() => setMenuVisibility((prevState) => !prevState)}\n                        />\n                    </Col>\n                </Row>\n            </Header>\n            <Content id=\"student-dashboard-content\" style={{ marginTop: headerHeight }}>\n                <div id=\"projects-table-container\">\n                    <Typography.Title level={2}>Projects</Typography.Title>\n                    <ProjectContainer />\n                    <Drawer\n                        closable={false}\n                        maskClosable={true}\n                        width={300}\n                        visible={menuVisibile}\n                        mask={!screen.md}\n                        style={{ marginTop: headerHeight - 24 }}>\n                        <StudentMenu />\n                    </Drawer>\n                </div>\n            </Content>\n        </>\n    );\n};\n\nexport default StudentDashboard;\n","const mentorActionTypes = {\n    LOGIN_REQUEST: \"MENTOR_LOGIN_REQUEST\",\n    LOGIN_SUCCESS: \"MENTOR_LOGIN_SUCCESS\",\n    LOGIN_FAILURE: \"MENTOR_LOGIN_FAILURE\",\n\n    LOGOUT_REQUEST: \"MENTOR_LOGOUT_REQUEST\",\n    LOGOUT_SUCCESS: \"MENTOR_LOGOUT_SUCCESS\",\n    LOGOUT_FAILURE: \"MENTOR_LOGOUT_FAILURE\",\n\n    SELECT_STUDENT_REQUEST: \"SELECT_STUDENT_REQUEST\",\n    SELECT_STUDENT_SUCCESS: \"SELECT_STUDENT_SUCCESS\",\n    SELECT_STUDENT_FAILURE: \"SELECT_STUDENT_FAILURE\",\n\n    SHORTLIST_STUDENT_REQUEST: \"SHORTLIST_STUDENT_REQUEST\",\n    SHORTLIST_STUDENT_SUCCESS: \"SHORTLIST_STUDENT_SUCCESS\",\n    SHORTLIST_STUDENT_FAILURE: \"SHORTLIST_STUDENT_FAILURE\",\n\n    GET_STUDENTS_REQUEST: \"GET_STUDENTS_REQUEST\",\n    GET_STUDENTS_SUCCESS: \"GET_STUDENTS_SUCCESS\",\n    GET_STUDENTS_FAILURE: \"GET_STUDENTS_FAILURE\",\n\n    UPDATE_PASSWORD_REQUEST: \"UPDATE_PASSWORD_REQUEST\",\n    UPDATE_PASSWORD_SUCCESS: \"UPDATE_PASSWORD_SUCCESS\",\n    UPDATE_PASSWORD_FAILURE: \"UPDATE_PASSWORD_FAILURE\",\n\n    AVATAR_REQUEST: \"AVATAR_REQUEST\",\n    AVATAR_SUCCESS: \"AVATAR_SUCCESS\",\n    AVATAR_FAILURE: \"AVATAR_FAILURE\",\n\n    GET_AVATAR_REQUEST: \"GET_AVATAR_REQUEST\",\n    GET_AVATAR_SUCCESS: \"GET_AVATAR_SUCCESS\",\n    GET_AVATAR_FAILURE: \"GET_AVATAR_FAILURE\"\n};\nexport default mentorActionTypes;\n","export const loadPersistedMentorState = () => {\n    try {\n        let persistedStateSerialized = localStorage.getItem(\"mentorData\");\n        if (persistedStateSerialized) {\n            let persistedState = JSON.parse(persistedStateSerialized);\n            return { mentor: { data: persistedState } };\n        } else {\n            return undefined;\n        }\n    } catch (error) {\n        return undefined;\n    }\n};\n\nexport const saveMentorState = async (mentorData) => {\n    try {\n        if (!mentorData.hasOwnProperty(\"_id\")) {\n            // Ugly hack to tell the function not to store data if there is no actual data\n            // I could do this from an ACTION but let's see\n            return undefined;\n        }\n        localStorage.setItem(\"mentorData\", JSON.stringify(mentorData));\n    } catch (error) {\n        console.log(error);\n        return undefined;\n    }\n};\n\n","export const initialLoginState = {\n    loggingIn: false,\n    error: {},\n};\n\n\n\nexport const initialMentorState = {\n    isUpdating: false,\n    isUploading: false,\n    num: 0,\n\n}\n\n// export const initialUploadState = {\n//     isUploading: false\n// }","import { combineReducers } from \"redux\";\n\nimport { loginReducer, mentorDataReducer, updateInfoReducer } from \"./mentor/mentorReducers\";\nimport { avatarReducer } from \"./mentor/mentorReducers\";\n\nconst mentor = combineReducers({\n    data: mentorDataReducer,\n    updateInfoState: updateInfoReducer,\n    avatarState: avatarReducer\n});\n\nconst rootReducerMentor = combineReducers({\n    loginData: loginReducer,\n    mentor,\n\n});\n\nexport default rootReducerMentor;\n","import mentorActionTypes from \"./mentorActionTypes\";\nimport { initialLoginState, initialMentorState, } from \"./initialMentorState\";\nimport { saveMentorState } from \"../loadPersistedStateMentor\";\n\n\nexport const loginReducer = (state = initialLoginState, action) => {\n    switch (action.type) {\n        case mentorActionTypes.LOGIN_REQUEST:\n            return {\n                loggingIn: true,\n                error: {},\n            };\n        case mentorActionTypes.LOGIN_SUCCESS:\n            return {\n                loggingIn: false,\n                error: {},\n            };\n        case mentorActionTypes.LOGIN_FAILURE:\n            return {\n                loggingIn: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\n\nexport const mentorDataReducer = (state = initialMentorState, action) => {\n    switch (action.type) {\n        case mentorActionTypes.LOGIN_SUCCESS:\n            saveMentorState(action.payload);\n            return {\n                ...action.payload,\n            };\n\n        case mentorActionTypes.LOGOUT_SUCCESS:\n            return initialMentorState;\n\n        case mentorActionTypes.SELECT_STUDENT_SUCCESS: {\n            const updatedStudent = {\n                ...state.projects\n                    .filter((project) => project.projectID === action.payload.projectCode)[0]\n                    .appliedStudents.filter((student) => student.studentID === action.payload.studentCode)[0],\n                status: \"selected\",\n            };\n            const updatedStudents = [\n                ...state.projects\n                    .filter((project) => project.projectID === action.payload.projectCode)[0]\n                    .appliedStudents.filter((student) => student.studentID !== action.payload.studentCode),\n                updatedStudent,\n            ];\n            const updatedProject = {\n                ...state.projects.filter((project) => project.projectID === action.payload.projectCode)[0],\n                appliedStudents: updatedStudents,\n            };\n            const updatedProjects = [\n                ...state.projects.filter((project) => project.projectID !== action.payload.projectCode),\n                updatedProject,\n            ];\n            const updatedState = { ...state, projects: updatedProjects };\n\n            saveMentorState(updatedState);\n            return updatedState;\n        }\n\n        case mentorActionTypes.SHORTLIST_STUDENT_SUCCESS: {\n            const updatedStudent = {\n                ...state.projects\n                    .filter((project) => project.projectID === action.payload.projectCode)[0]\n                    .appliedStudents.filter((student) => student.studentID === action.payload.studentCode)[0],\n                status: \"shortlisted\",\n            };\n            const updatedStudents = [\n                ...state.projects\n                    .filter((project) => project.projectID === action.payload.projectCode)[0]\n                    .appliedStudents.filter((student) => student.studentID !== action.payload.studentCode),\n                updatedStudent,\n            ];\n            const updatedProject = {\n                ...state.projects.filter((project) => project.projectID === action.payload.projectCode)[0],\n                appliedStudents: updatedStudents,\n            };\n            const updatedProjects = [\n                ...state.projects.filter((project) => project.projectID !== action.payload.projectCode),\n                updatedProject,\n            ];\n            const updatedState = { ...state, projects: updatedProjects };\n\n            saveMentorState(updatedState);\n            return updatedState;\n        }\n        case mentorActionTypes.GET_STUDENTS_SUCCESS:\n            const updatedMentor = { ...state, projects: action.payload, loading: false };\n            saveMentorState(updatedMentor);\n            return updatedMentor;\n\n        case mentorActionTypes.GET_STUDENTS_REQUEST:\n            saveMentorState({ ...state, loading: true });\n            return { ...state, loading: true };\n\n        case mentorActionTypes.GET_AVATAR_SUCCESS:\n            console.log(state)\n            const updatedMentorWithAvatar = { ...state, avatarURL: action.payload, loading: false,  };\n            saveMentorState(updatedMentorWithAvatar);\n            return updatedMentorWithAvatar;\n\n        \n\n        default:\n            return state;\n    }\n};\n\nexport const updateInfoReducer = (state = initialMentorState, action) => {\n    switch (action.type) {\n\n        case mentorActionTypes.UPDATE_PASSWORD_REQUEST:\n            return {\n                ...state,\n                isUpdating: true,\n            };\n\n\n        case mentorActionTypes.UPDATE_PASSWORD_SUCCESS:\n            return {\n                ...state,\n                isUpdating: false,\n            };\n\n\n        case mentorActionTypes.UPDATE_PASSWORD_FAILURE:\n            return {\n                isUpdating: false,\n                error: { ...action.payload },\n            };\n\n        default:\n            return state;\n    }\n};\n\nexport const avatarReducer = (state = initialMentorState, action) => {\n    console.log(\"hello\", action.payload)\n    switch (action.type) {\n        case mentorActionTypes.AVATAR_REQUEST:\n            return {\n                ...state,\n                isUploading: true,\n            };\n        case mentorActionTypes.AVATAR_SUCCESS:\n\n            return {\n                ...state,\n                num: state.num + 1,\n\n                isUploading: false,\n            };\n        case mentorActionTypes.AVATAR_FAILURE:\n            return {\n                isUploading: false,\n                error: { ...action.payload },\n            };\n        default:\n            return state;\n    }\n};\n\n","import { applyMiddleware, createStore, compose } from \"redux\";\nimport thunk from \"redux-thunk\";\nimport { loadPersistedMentorState } from \"./loadPersistedStateMentor\";\nimport rootReducerMentor from \"./rootReducerMentor\";\n\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst persistedStateMentor = loadPersistedMentorState();\n\nconst store = createStore(rootReducerMentor, persistedStateMentor, composeEnhancers(applyMiddleware(thunk)));\n\nexport default store;\n","import mentorActionTypes from \"./mentorActionTypes\";\nimport Axios from \"axios\";\nimport getCookieToken from \"../../utils/getCookieToken\";\nimport store from \"../storeMentor\";\n\n\nconst axios = Axios.create({\n    baseURL: \"https://ecell.iitm.ac.in/data\",\n    withCredentials: true,\n});\n\nconst checkStatus = (student, selectedStudents, shortlistedStudents) => {\n    if (selectedStudents.filter((s) => s._id === student._id)[0]) return \"selected\";\n    else if (shortlistedStudents.filter((s) => s._id === student._id)[0]) return \"shortlisted\";\n    else return \"none\";\n};\n\nconst mentorLoginRequest = () => ({\n    type: mentorActionTypes.LOGIN_REQUEST,\n});\nconst mentorLoginSuccess = (data) => ({\n    type: mentorActionTypes.LOGIN_SUCCESS,\n    payload: data,\n});\nconst mentorLoginFailure = (err) => ({\n    type: mentorActionTypes.LOGIN_FAILURE,\n    payload: err,\n});\n\nexport const loginMentor = (dataToPost, handleSuccess, handleError) => {\n    return async (dispatch) => {\n        dispatch(mentorLoginRequest());\n        try {\n            let res = await axios.post(`/team-up-portal/mentor/login`, dataToPost);\n            let res2 = await axios.get(`/team-up-portal/mentor/projects`);\n\n            if (getCookieToken()) {\n                const projects = await res2.data.data.map((project) => {\n                    return {\n                        ...project,\n                        name: project.title,\n                        projectID: project.title.toLowerCase().split(\" \").join(\"-\"),\n                    };\n                });\n                const mentor = { ...res.data.data, projects };\n                dispatch(mentorLoginSuccess(mentor));\n                handleSuccess();\n            } else throw new Error(\"an error occured\");\n        } catch (error) {\n            console.log(error);\n            let errorMsg = error.response ? error.response.data.msg : error.message;\n            dispatch(mentorLoginFailure(error.response ? error.response.data : error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst selectStudentRequest = () => ({\n    type: mentorActionTypes.SELECT_STUDENT_REQUEST,\n});\n\nconst selectStudentSuccess = (data) => ({\n    type: mentorActionTypes.SELECT_STUDENT_SUCCESS,\n    payload: data,\n});\n\nconst selectStudentFailure = (err) => ({\n    type: mentorActionTypes.SELECT_STUDENT_FAILURE,\n    payload: err,\n});\n\nconst shortlistStudentRequest = () => ({\n    type: mentorActionTypes.SHORTLIST_STUDENT_REQUEST,\n});\n\nconst shortlistStudentSuccess = (data) => ({\n    type: mentorActionTypes.SHORTLIST_STUDENT_SUCCESS,\n    payload: data,\n});\n\nconst shortlistStudentFailure = (err) => ({\n    type: mentorActionTypes.SHORTLIST_STUDENT_FAILURE,\n    payload: err,\n});\nexport const selectStudent = (\n    student,\n    project,\n    handleSuccess = (msg) => console.log(msg),\n    handleError = (msg) => console.log(msg)\n) => {\n    return async (dispatch) => {\n        dispatch(selectStudentRequest());\n\n        const studentCode = student.studentID;\n        const projectCode = project.projectID;\n        const studentID = student._id;\n        const studentMail = student.email ;\n        const projectID = project._id;\n        try {\n            await axios.put(\"team-up-portal/mentor/update-project-info/select-student\", {\n                projectID,\n                studentID,\n            });\n            await dispatch(selectStudentSuccess({ studentCode, projectCode }));\n            await axios.post(\"team-up-portal/mail/selection\", {\n                projectID,\n                studentMail,\n            })\n            handleSuccess();\n        } catch (err) {\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.data ? error.data.msg : error.message;\n            dispatch(selectStudentFailure(error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nexport const shortlistStudent = (\n    student,\n    project,\n    handleSuccess = (msg) => console.log(msg),\n    handleError = (msg) => console.log(msg)\n) => {\n    return async (dispatch) => {\n        dispatch(shortlistStudentRequest());\n\n        const studentCode = student.studentID;\n        const projectCode = project.projectID;\n        const studentID = student._id;\n        const projectID = project._id;\n\n        try {\n            await axios.put(\"team-up-portal/mentor/update-project-info/shortlist-student\", {\n                projectID,\n                studentID,\n            });\n            await dispatch(shortlistStudentSuccess({ studentCode, projectCode }));\n            handleSuccess();\n        } catch (err) {\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.data ? error.data.msg : error.message;\n            dispatch(shortlistStudentFailure(error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst mentorLogoutRequest = () => ({\n    type: mentorActionTypes.LOGOUT_REQUEST,\n});\n\nconst mentorLogoutSuccess = () => ({\n    type: mentorActionTypes.LOGOUT_SUCCESS,\n});\nconst mentorLogoutFailure = (err) => ({\n    type: mentorActionTypes.LOGOUT_FAILURE,\n    payload: err,\n});\n\nexport const logoutMentor = (handleSuccess = (msg) => console.log(msg), handleError = (msg) => console.log(msg)) => {\n    return async (dispatch) => {\n        dispatch(mentorLogoutRequest());\n        try {\n            await axios.get(`/team-up-portal/mentor/logout`);\n            dispatch(mentorLogoutSuccess());\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            let errorMsg = error.response ? error.response.msg : error.message;\n            dispatch(mentorLogoutFailure(error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst getStudentsRequest = () => ({\n    type: mentorActionTypes.GET_STUDENTS_REQUEST,\n});\nconst getStudentsSuccess = (data) => ({\n    type: mentorActionTypes.GET_STUDENTS_SUCCESS,\n    payload: data,\n});\nconst getStudentsFailure = (err) => ({\n    type: mentorActionTypes.GET_STUDENTS_FAILURE,\n    payload: err,\n});\n\nexport const getStudents = (\n    projectID,\n    handleSuccess = (msg) => console.log(msg),\n    handleError = (msg) => console.log(msg)\n) => {\n    return async (dispatch) => {\n        dispatch(getStudentsRequest());\n        try {\n            let res1 = await axios.get(`/team-up-portal/mentor/projects`);\n            let res2 = await axios.get(`/team-up-portal/mentor/projects/applied-students?for=${projectID}`);\n            let res3 = await axios.get(`/team-up-portal/mentor/projects/selected-students?for=${projectID}`);\n            let res4 = await axios.get(`/team-up-portal/mentor/projects/shortlisted-students?for=${projectID}`);\n\n            const appliedStudents = res2.data.data;\n            const selectedStudents = res3.data.data;\n            const shortlistedStudents = res4.data.data;\n\n            if (getCookieToken()) {\n                const updatedAppliedStudents = appliedStudents.map((student) => {\n                    return {\n                        ...student,\n                        studentID: student.name.toLowerCase().split(\" \").join(\"-\"),\n                        status: checkStatus(student, selectedStudents, shortlistedStudents),\n                    };\n                });\n                const projects = res1.data.data.map((project) => {\n                    return {\n                        ...project,\n                        projectID: project.title.toLowerCase().split(\" \").join(\"-\"),\n                        appliedStudents: updatedAppliedStudents,\n                        name: project.title,\n                    };\n                });\n                dispatch(getStudentsSuccess(projects));\n                handleSuccess();\n            } else throw new Error(\"an error occured\");\n        } catch (error) {\n            console.log(error);\n            let errorMsg = error.response ? error.response.data : error.message;\n            dispatch(getStudentsFailure(error.response ? error.response : error));\n            handleError(errorMsg);\n        }\n    };\n};\n\nconst updatePasswordRequest = () => ({\n    type: mentorActionTypes.UPDATE_PASSWORD_REQUEST,\n});\n\nconst updatePasswordSuccess = () => ({\n    type: mentorActionTypes.UPDATE_PASSWORD_SUCCESS,\n});\n\nconst updatePasswordFailure = (err) => ({\n    type: mentorActionTypes.UPDATE_PASSWORD_FAILURE,\n    payload: err,\n});\n\nexport const updateMentorPassword = (passwords, handleError, handleSuccess) => {\n    return async (dispatch) => {\n        dispatch(updatePasswordRequest());\n\n        try {\n            await axios.put(\"/team-up-portal/mentor/update-mentor-info/password\", { passwords });\n\n            dispatch(updatePasswordSuccess());\n            handleSuccess();\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(updatePasswordFailure(error));\n            handleError(error.msg);\n            console.log(error);\n        }\n    };\n};\n\n\n\nconst uploadRequest = (type) => ({\n    type: mentorActionTypes[`${type.toUpperCase()}_REQUEST`],\n});\n\nconst uploadSuccess = (type, data) => ({\n    type: mentorActionTypes[`${type.toUpperCase()}_SUCCESS`],\n    payload: data,\n});\n\nconst uploadFailure = (type, err) => ({\n    type: mentorActionTypes[`${type.toUpperCase()}_FAILURE`],\n    payload: err,\n});\n/**\n *\n * @param {string} type\n * @param {File} file\n */\nexport const upload = (type, file) => {\n    return async (dispatch) => {\n        dispatch(uploadRequest(type));\n        try {\n            const res = await axios.get(`/team-up-portal/s3-signed-policy/team-up-mentor-${type}s`);\n\n            let S3SignedPolicyObject = { ...res.data.data };\n            let bucketWriteUrl = `https://${S3SignedPolicyObject.bucket}.s3.ap-south-1.amazonaws.com/`;\n\n            const { _id: mentorID, name } = store.getState().mentor.data;\n            const filename = `${name.replace(/ /g, \"\")}-${type.toUpperCase()}.${file.name.split(\".\").pop()}`;\n\n            async function makeFormdataAndUpload() {\n                var fd = new FormData();\n\n                fd.append(\"x-amz-algorithm\", \"AWS4-HMAC-SHA256\");\n                fd.append(\"acl\", S3SignedPolicyObject.bucketAcl);\n                fd.append(\"policy\", S3SignedPolicyObject.encodedPolicy);\n                fd.append(\"x-amz-credential\", S3SignedPolicyObject.amzCred);\n                fd.append(\"x-amz-date\", S3SignedPolicyObject.expirationStrClean);\n                fd.append(\"X-Amz-Signature\", S3SignedPolicyObject.sign);\n\n                fd.append(\"key\", filename);\n                fd.append(\"Content-Type\", file.type);\n\n                fd.append(\"file\", file);\n\n                await axios.post(bucketWriteUrl, fd, { withCredentials: false });\n            }\n            await makeFormdataAndUpload();\n\n            let URL = `${bucketWriteUrl}${filename}`;\n\n            await axios.put(`/team-up-portal/mentor/update-mentor-info/${type}`, { mentorID, [`${type}URL`]: URL });\n\n            dispatch(uploadSuccess(type, URL));\n\n            // dispatch(avatarSuccess(type,URL));\n        } catch (err) {\n            console.log(err);\n            let error = err.response ? err.response.data : err;\n            dispatch(uploadFailure(type, error));\n        }\n    };\n};\n\nconst getAvatarRequest = () => ({\n    type: mentorActionTypes.GET_AVATAR_REQUEST,\n});\nconst getAvatarSuccess = (data) => ({\n    type: mentorActionTypes.GET_AVATAR_SUCCESS,\n    payload: data,\n});\nconst getAvatarFailure = (err) => ({\n    type: mentorActionTypes.GET_AVATAR_FAILURE,\n    payload: err,\n});\n\nexport const getAvatar = (\n\n    handleSuccess = (msg) => console.log(msg),\n    handleError = (msg) => console.log(msg)\n) => {\n    return async (dispatch) => {\n        dispatch(getAvatarRequest());\n        try {\n            let res = await axios.get(`/team-up-portal/mentor/avatar`);\n\n\n            const mentorAvatar = res.data.data;\n\n            if (getCookieToken()) {\n                const updatedAvatar = mentorAvatar\n\n                dispatch(getAvatarSuccess(updatedAvatar));\n                handleSuccess();\n            } else throw new Error(\"an error occured\");\n        } catch (error) {\n            console.log(error);\n            let errorMsg = error.response ? error.response.data : error.message;\n            dispatch(getAvatarFailure(error.response ? error.response : error));\n            handleError(errorMsg);\n        }\n    };\n};\n","import React from \"react\";\nimport { useEffect, useState } from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { CheckCircleOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport { Statistic, Row, Col, Card } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\n\nfunction Statistics(props) {\n    const { projectID } = props;\n    const mentor = useSelector((state) => state.mentor);\n    const [statisticsState, setStatisticsState] = useState({});\n    const statisticsChecker = () => {\n        const selected =\n            mentor.data.projects.filter((project) => project.projectID === projectID)[0].appliedStudents !== undefined\n                ? mentor.data.projects\n                      .filter((project) => project.projectID === projectID)[0]\n                      .appliedStudents.filter((student) => student.status === \"selected\").length\n                : mentor.data.projects.filter((project) => project.projectID === projectID)[0].selected.length;\n        const shortlisted =\n            mentor.data.projects.filter((project) => project.projectID === projectID)[0].appliedStudents !== undefined\n                ? mentor.data.projects\n                      .filter((project) => project.projectID === projectID)[0]\n                      .appliedStudents.filter((student) => student.status === \"shortlisted\").length\n                : mentor.data.projects.filter((project) => project.projectID === projectID)[0].shortlisted.length;\n\n        return setStatisticsState({ selected, shortlisted });\n    };\n    useEffect(() => {\n        statisticsChecker();\n        //eslint-disable-next-line\n    }, [mentor]);\n\n    return (\n        <div\n            className=\"site-statistic-demo-card\"\n            style={{\n                background: \"#ececec\",\n                padding: \"10px\",\n                textAlign: \"center\",\n            }}>\n            <Row gutter={8} justify=\"center\">\n                <Col span={12}>\n                    <Card>\n                        <Row justify=\"center\">\n                            <Statistic\n                                title=\"\"\n                                value={statisticsState.shortlisted}\n                                precision={0}\n                                valueStyle={{ color: \"#d38027\", fontSize: \"50px\" }}\n                                prefix={<SmileOutlined />}\n                                // suffix=\"Shortlisted\"\n                                style={{ textAlign: \"center\", minHeight: \"50px\" }}\n                            />\n                        </Row>\n                        <Row justify=\"center\">\n                            <Title level={5} style={{ color: \"#d38027\" }}>\n                                Shortlisted\n                            </Title>\n                        </Row>\n                    </Card>\n                </Col>\n                <Col span={12}>\n                    <Card>\n                        <Row justify=\"center\">\n                            <Statistic\n                                title=\"\"\n                                value={statisticsState.selected}\n                                precision={0}\n                                valueStyle={{ color: \"#3f8600\", fontSize: \"50px\" }}\n                                prefix={<CheckCircleOutlined />}\n                                // suffix=\"Selected\"\n                                style={{ textAlign: \"center\", minHeight: \"50px\" }}\n                            />\n                        </Row>\n                        <Row justify=\"center\">\n                            <Title level={5} style={{ color: \"#3f8600\" }}>\n                                Selected\n                            </Title>\n                        </Row>\n                    </Card>\n                </Col>\n            </Row>\n        </div>\n    );\n}\n\nexport default Statistics;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Drawer, Avatar, Divider, Col, Row, Card, Button, Descriptions, Popconfirm, message } from \"antd\";\nimport { CheckCircleOutlined, UserOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport Title from \"antd/lib/typography/Title\";\nimport { selectStudent } from \"../../redux/mentor/mentorActions\";\nimport { shortlistStudent } from \"../../redux/mentor/mentorActions\";\nimport openAntdNotification from \"../../utils/openAntdNotification\";\n\nconst Application = (props) => {\n    const { projectID, studentID, appType } = props;\n\n    const ConfirmPopup = (props) => {\n        const { type, student, project } = props;\n\n        function confirm(type) {\n            switch (type) {\n                case \"Select\": {\n                    dispatch(selectStudent(student, project, handleSuccess));\n\n                    function handleSuccess() {\n                        openAntdNotification(\n                            \"success\",\n                            `Student selected successfully `,\n                            <span>\n                                Selected students are displayed in <strong>Selected</strong> tab!\n                            </span>\n                        );\n                    }\n                    break;\n                }\n                case \"Shortlist\": {\n                    dispatch(shortlistStudent(student, project, handleSuccess));\n\n                    function handleSuccess() {\n                        openAntdNotification(\n                            \"success\",\n                            `Student Shortlisted successfully`,\n                            <span>\n                                Shortlisted students are displayed in <strong>Shortlisted</strong> tab!\n                            </span>\n                        );\n                    }\n                    break;\n                }\n                default:\n                    return null;\n            }\n            console.log(type);\n        }\n\n        function cancel(type) {\n            console.log(type);\n            message.error(`Student was not ${type}ed`);\n        }\n\n        return (\n            <Popconfirm\n                title={\n                    type === \"Select\"\n                        ? \"Are you sure you want to Select this student? This action can not be undone.\"\n                        : type === \"Shortlist\"\n                        ? \"Are you sure you want to Shortlist this student?\"\n                        : \"unknown\"\n                }\n                onConfirm={() => confirm(type)}\n                onCancel={() => cancel(type)}\n                okText=\"Yes\"\n                cancelText=\"No\">\n                <Button\n                    type=\"primary\"\n                    icon={type === \"Shortlist\" ? <SmileOutlined /> : <CheckCircleOutlined />}\n                    disabled={type === \"Selected\"}\n                    shape=\"round\"\n                    block={true}>\n                    {type}\n                </Button>\n            </Popconfirm>\n        );\n    };\n\n    const project = useSelector(\n        (state) => state.mentor.data.projects.filter((project) => project.projectID === projectID)[0]\n    );\n\n    const student = useSelector(\n        (state) =>\n            state.mentor.data.projects\n                .filter((project) => project.projectID === projectID)[0]\n                .appliedStudents.filter((student) => student.studentID === studentID)[0]\n    );\n\n    const dispatch = useDispatch();\n    const [state, setState] = useState({ visible: false });\n\n    const showDrawer = () => {\n        setState({\n            visible: true,\n        });\n    };\n\n    const onClose = () => {\n        setState({\n            visible: false,\n        });\n    };\n\n    return (\n        <>\n            <Card hoverable={true} style={{ backgroundColor: \"white\" }}>\n                <Row gutter={16}>\n                    <Col span={16}>\n                        {\" \"}\n                        <Title level={3}>{student.roll}</Title>\n                    </Col>\n                    <Col span={8}>\n                        <Button onClick={showDrawer} type=\"link\">\n                            View Profile\n                        </Button>\n                    </Col>\n                </Row>\n\n                <Row>\n                    <Col span={8}>\n                        <Avatar\n                            size={64}\n                            icon={<UserOutlined />}\n                            style={{ backgroundColor: \"#87d068\" }}\n                            src={student.avatarURL !== undefined ? student.avatarURL : null}\n                        />\n                    </Col>\n                    <Col span={16}>\n                        <p>{student.name}</p>\n                        <p>Branch: {student.branch}</p>\n                        <p>Year : {student.yearOfStudy} </p>\n                    </Col>\n                </Row>\n\n                <ConfirmPopup type={appType} student={student} project={project} />\n            </Card>\n\n            <Drawer width={340} placement=\"right\" closable={false} onClose={onClose} visible={state.visible}>\n                <Avatar\n                    size={300}\n                    style={{ backgroundColor: \"#87d068\" }}\n                    icon={<UserOutlined />}\n                    src={student.avatarURL !== undefined ? student.avatarURL : null}\n                />\n\n                <Descriptions title=\"Student Profile\">\n                    <Descriptions.Item span={12} label=\"Name\">\n                        {student.name}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Roll Number\">\n                        {student.roll}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Branch\">\n                        {student.branch}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Year\">\n                        {student.yearOfStudy}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Contact no.\">\n                        +91 {student.phone}{\" \"}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Email\">\n                        {student.email}\n                    </Descriptions.Item>\n                </Descriptions>\n\n                <Button type=\"primary\" href={student.cvURL} target=\"_blank\" shape=\"round\" block={true}>\n                    View CV\n                </Button>\n\n                <Divider />\n\n                <ConfirmPopup type={appType} student={student} project={project} />\n            </Drawer>\n        </>\n    );\n};\n\nexport default Application;\n","import React, { Fragment, useEffect } from \"react\";\nimport { Tabs, Card, Result, Button, Typography, List, Row, Col } from \"antd\";\nimport Title from \"antd/lib/typography/Title\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { FileDoneOutlined, UserAddOutlined, RiseOutlined, TeamOutlined, ThunderboltOutlined } from \"@ant-design/icons\";\nimport { getStudents } from \"../../redux/mentor/mentorActions\";\nimport { Link } from \"react-router-dom\";\nimport Statistics from \"./Statistics\";\nimport Application from \"./Application\";\n\nconst { Paragraph } = Typography;\nconst { TabPane } = Tabs;\n\nconst Project = (props) => {\n    const dispatch = useDispatch();\n\n    const { projectID } = props;\n\n    const project = useSelector(\n        (state) => state.mentor.data.projects.filter((project) => project.projectID === projectID)[0]\n    );\n    const mentor = useSelector((state) => state.mentor);\n\n    useEffect(() => {\n        dispatch(getStudents(project._id));\n        //eslint-disable-next-line\n    }, [dispatch]);\n\n    return (\n        <Fragment>\n            <Title level={3} style={{ padding: 10, paddingTop: 20 }}>\n                {\" \"}\n                {project.name}\n            </Title>\n            <Tabs defaultActiveKey=\"1\">\n                <TabPane tab=\"Project Overview\" key=\"1\">\n                    <Paragraph ellipsis={{ rows: 3, expandable: true, symbol: \"more\" }} style={{ fontSize: \"1.5em\" }}>\n                        {project.description}\n                    </Paragraph>\n                    <Row jusify=\"center\">\n                        <Col\n                            xs={{ span: 24 }}\n                            sm={{ span: 12, offset: 6 }}\n                            md={{ span: 8, offset: 0 }}\n                            lg={{ span: 6, offset: 2 }}>\n                            <Title level={4} style={{ padding: 10 }}>\n                                <RiseOutlined /> Statistics\n                            </Title>\n                            <Statistics projectID={projectID} />\n                        </Col>\n\n                        <Col\n                            style={{ paddingTop: 10 }}\n                            xs={{ span: 24, offset: 0 }}\n                            sm={{ span: 11, offset: 0 }}\n                            md={{ span: 7, offset: 1 }}\n                            lg={{ span: 7, offset: 1 }}>\n                            <Title level={4} style={{ padding: 10 }}>\n                                <TeamOutlined /> Job Profiles\n                            </Title>\n\n                            <List\n                                style={{ backgroundColor: \"white\" }}\n                                bordered\n                                dataSource={project.jobProfiles}\n                                renderItem={(profile) => <List.Item>{profile}</List.Item>}\n                            />\n                        </Col>\n\n                        <Col\n                            style={{ paddingTop: 10 }}\n                            xs={{ span: 24, offset: 0 }}\n                            sm={{ span: 11, offset: 2 }}\n                            md={{ span: 7, offset: 1 }}\n                            lg={{ span: 6, offset: 1 }}>\n                            <Title level={4} style={{ padding: 10 }}>\n                                <ThunderboltOutlined /> Skills Required\n                            </Title>\n\n                            <List\n                                style={{ backgroundColor: \"white\" }}\n                                bordered\n                                dataSource={project.skillsRequired}\n                                renderItem={(skill) => <List.Item>{skill}</List.Item>}\n                            />\n                        </Col>\n                    </Row>\n                </TabPane>\n                <TabPane tab=\"Applications\" key=\"2\">\n                    <Row gutter={10}>\n                        {mentor.data.projects.filter((project) => project.projectID === projectID)[0]\n                            .appliedStudents !== undefined ? (\n                            mentor.data.projects\n                                .filter((project) => project.projectID === projectID)[0]\n                                .appliedStudents.filter((student) => student.status === \"none\").length !== 0 ? (\n                                mentor.data.projects\n                                    .filter((project) => project.projectID === projectID)[0]\n                                    .appliedStudents.filter((student) => student.status === \"none\")\n                                    .map((student) => (\n                                        <Col\n                                            key={student._id}\n                                            style={{ paddingTop: 10 }}\n                                            xs={{ span: 24, offset: 0 }}\n                                            sm={{ span: 24, offset: 0 }}\n                                            md={{ span: 12, offset: 0 }}\n                                            lg={{ span: 8, offset: 0 }}>\n                                            <Application\n                                                projectID={projectID}\n                                                studentID={student.studentID}\n                                                appType=\"Shortlist\"\n                                            />\n                                        </Col>\n                                    ))\n                            ) : (\n                                <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                    <Result\n                                        icon={<FileDoneOutlined />}\n                                        title=\"Great! All applicants have been either Shortlisted or Selected\"\n                                        subTitle=\"Check the Shortlists Tab or Selected Tab to proceed OR\"\n                                        extra={\n                                            <Button type=\"primary\">\n                                                <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                            </Button>\n                                        }\n                                    />\n                                </Card>\n                            )\n                        ) : (\n                            <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                <Result\n                                    icon={<FileDoneOutlined />}\n                                    title=\"Great! All applicants have been either Shortlisted or Selected\"\n                                    subTitle=\"Check the Shortlists Tab or Selected Tab to proceed OR\"\n                                    extra={\n                                        <Button type=\"primary\">\n                                            <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                        </Button>\n                                    }\n                                />\n                            </Card>\n                        )}\n                    </Row>\n                </TabPane>\n\n                <TabPane tab=\"Shortlists\" key=\"3\">\n                    <Row>\n                        {mentor.data.projects.filter((project) => project.projectID === projectID)[0]\n                            .appliedStudents !== undefined ? (\n                            mentor.data.projects\n                                .filter((project) => project.projectID === projectID)[0]\n                                .appliedStudents.filter((student) => student.status === \"shortlisted\").length !== 0 ? (\n                                mentor.data.projects\n                                    .filter((project) => project.projectID === projectID)[0]\n                                    .appliedStudents.filter((student) => student.status === \"shortlisted\")\n                                    .map((student) => (\n                                        <Col\n                                            key={student._id}\n                                            style={{ paddingTop: 10 }}\n                                            xs={{ span: 24, offset: 0 }}\n                                            sm={{ span: 24, offset: 0 }}\n                                            md={{ span: 12, offset: 0 }}\n                                            lg={{ span: 8, offset: 0 }}>\n                                            <Application\n                                                projectID={projectID}\n                                                studentID={student.studentID}\n                                                appType=\"Select\"\n                                            />\n                                        </Col>\n                                    ))\n                            ) : (\n                                <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                    <Result\n                                        icon={<UserAddOutlined />}\n                                        title=\"Yet to Shortlist applications.\"\n                                        subTitle=\"Check the Applications Tab to proceed OR\"\n                                        extra={\n                                            <Button type=\"primary\">\n                                                <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                            </Button>\n                                        }\n                                    />\n                                </Card>\n                            )\n                        ) : (\n                            <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                <Result\n                                    icon={<UserAddOutlined />}\n                                    title=\"Yet to Shortlist applications.\"\n                                    subTitle=\"Check the Applications Tab to proceed OR\"\n                                    extra={\n                                        <Button type=\"primary\">\n                                            <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                        </Button>\n                                    }\n                                />\n                            </Card>\n                        )}\n                    </Row>\n                </TabPane>\n\n                <TabPane tab=\"Selections\" key=\"4\">\n                    <Row>\n                        {mentor.data.projects.filter((project) => project.projectID === projectID)[0]\n                            .appliedStudents !== undefined ? (\n                            mentor.data.projects\n                                .filter((project) => project.projectID === projectID)[0]\n                                .appliedStudents.filter((student) => student.status === \"selected\").length !== 0 ? (\n                                mentor.data.projects\n                                    .filter((project) => project.projectID === projectID)[0]\n                                    .appliedStudents.filter((student) => student.status === \"selected\")\n                                    .map((student) => (\n                                        <Col\n                                            key={student._id}\n                                            style={{ paddingTop: 10 }}\n                                            xs={{ span: 24, offset: 0 }}\n                                            sm={{ span: 24, offset: 0 }}\n                                            md={{ span: 12, offset: 0 }}\n                                            lg={{ span: 8, offset: 0 }}>\n                                            <Application\n                                                projectID={projectID}\n                                                studentID={student.studentID}\n                                                appType=\"Selected\"\n                                            />\n                                        </Col>\n                                    ))\n                            ) : (\n                                <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                    <Result\n                                        icon={<UserAddOutlined />}\n                                        title=\"Yet to make any Selections.\"\n                                        subTitle=\"Check the Shortlists Tab to proceed OR\"\n                                        extra={\n                                            <Button type=\"primary\">\n                                                <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                            </Button>\n                                        }\n                                    />\n                                </Card>\n                            )\n                        ) : (\n                            <Card style={{ backgroundColor: \"white\", width: 2400 }}>\n                                <Result\n                                    icon={<UserAddOutlined />}\n                                    title=\"Yet to make any Selections.\"\n                                    subTitle=\"Check the Shortlists Tab to proceed OR\"\n                                    extra={\n                                        <Button type=\"primary\">\n                                            <Link to=\"/mentor-dashboard\">Go to Home</Link>\n                                        </Button>\n                                    }\n                                />\n                            </Card>\n                        )}\n                    </Row>\n                </TabPane>\n            </Tabs>\n        </Fragment>\n    );\n};\n\nexport default Project;\n","import React from \"react\";\nimport { Typography, Row, Col, Card, Divider } from \"antd\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport { getStudents } from \"../../redux/mentor/mentorActions\";\nimport Statistics from \"./Statistics\";\n\nconst { Title } = Typography;\n\nfunction Greetings() {\n    const dispatch = useDispatch();\n    const projects = useSelector((state) => state.mentor.data.projects);\n    return (\n        <div>\n            <Row>\n                <Col xs={{ offset: 2 }} sm={{ offset: 5 }} md={{ offset: 7 }} lg={{ offset: 8 }} xl={{ offset: 9 }}>\n                    <Title style={{ textAlign: \"center\", paddingTop: 20, paddingLeft: 20 }} level={2}>\n                        Welcome to your dashboard\n                    </Title>\n                </Col>\n            </Row>\n\n            <Divider />\n            <Title level={2}>Your Projects</Title>\n\n            <Row gutter={24}>\n                {projects\n                    ? projects.map((project) => (\n                          <Col\n                              xs={{ span: 24, offset: 0 }}\n                              sm={{ span: 24, offset: 0 }}\n                              md={{ span: 12, offset: 0 }}\n                              lg={{ span: 8, offset: 0 }}>\n                              <Card hoverable={true} style={{ backgroundColor: \"#fffffffa\" }}>\n                                  <Row gutter={16}>\n                                      <Col span={24}>\n                                          <Title level={3}>{project.name}</Title>\n                                      </Col>\n                                      <Col span={24}>\n                                          <Link\n                                              to={`/mentor-dashboard/${project.projectID}`}\n                                              onClick={() => dispatch(getStudents(project._id))}\n                                              style={{ fontSize: \"20px\" }}>\n                                              Go to project\n                                          </Link>\n                                      </Col>\n                                  </Row>\n                                  <Row>\n                                      <Col span={24}>\n                                          <Statistics projectID={project.projectID} />\n                                      </Col>\n                                  </Row>\n                              </Card>\n                          </Col>\n                      ))\n                    : null}\n            </Row>\n        </div>\n    );\n}\n\nexport default Greetings;\n","import React from \"react\";\nimport { Row, Col, Form, Modal, Input, Button, Tabs } from \"antd\";\nimport { KeyOutlined, SmileOutlined } from \"@ant-design/icons\";\n\nimport openAntdNotification from \"../../../utils/openAntdNotification\";\n\nimport { updateMentorPassword } from \"../../../redux/mentor/mentorActions\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst { TabPane } = Tabs;\n\nconst ChangePasswordModal = ({ visible, setVisible }) => {\n    const dispatch = useDispatch();\n\n    const isUpdating = useSelector((state) => state.mentor.updateInfoState.isUpdating);\n\n    const onPasswordChange = (passwords) => {\n        const handleSuccess = () => {\n            openAntdNotification(\"success\", \"Password changed successfully\");\n        };\n        const handleError = (errorMsg) => {\n            openAntdNotification(\"error\", \"Error occured in changing password\", errorMsg);\n        };\n\n        dispatch(updateMentorPassword(passwords, handleError, handleSuccess));\n    };\n    return (\n        <Modal visible={visible} footer={null} destroyOnClose={true} closable={false} zIndex={1003}>\n            <Tabs>\n                <TabPane tab=\"CHANGE PASSWORD\">\n                    <Form layout=\"vertical\" onFinish={onPasswordChange}>\n                        <Form.Item\n                            name=\"currentPassword\"\n                            rules={[{ required: true, message: \"Please input your current password.\" }]}\n                            label={\n                                <span>\n                                    <KeyOutlined /> Current Password\n                                </span>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n                        <Form.Item\n                            name=\"newPassword\"\n                            extra={\n                                <span>\n                                    Keep it more than 6 letters. <SmileOutlined />\n                                </span>\n                            }\n                            rules={[\n                                {\n                                    min: 6,\n                                    message: \"Please input at least 6 characters.\",\n                                },\n                                {\n                                    required: true,\n                                    message: \"Please input a new password if you want to change your current one.\",\n                                },\n                            ]}\n                            label={\n                                <span>\n                                    <KeyOutlined /> New Password\n                                </span>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n                        <Row gutter={[12, 0]} justify=\"end\">\n                            <Col>\n                                <Button onClick={() => setVisible(false)}>Discard</Button>\n                            </Col>\n                            <Col>\n                                <Form.Item style={{ marginBottom: 0 }}>\n                                    <Button type=\"primary\" htmlType=\"submit\" loading={isUpdating}>\n                                        Change Password\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </TabPane>\n            </Tabs>\n        </Modal>\n    );\n};\n\nexport default ChangePasswordModal;\n","import React, { useState } from \"react\";\nimport { Upload, message } from \"antd\";\nimport { LoadingOutlined, PlusOutlined } from \"@ant-design/icons\";\nimport ImgCrop from \"antd-img-crop\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { upload } from \"../../redux/mentor/mentorActions\";\n\nconst AvatarUploader = () => {\n    const loading = useSelector((state) => state.mentor.updateInfoState.isUploading);\n\n    const [avatar, setAvatar] = useState(null);\n    const dispatch = useDispatch();\n\n    function beforeUpload(file) {\n        const isJpgOrPng = file.type === \"image/jpeg\" || file.type === \"image/png\";\n        if (!isJpgOrPng) {\n            message.error(\"You can only upload JPG/PNG file!\");\n        }\n        const isLt2M = file.size / 1024 / 1024 < 2;\n        if (!isLt2M) {\n            message.error(\"Image must smaller than 2MB!\");\n        }\n        setAvatar(file);\n        return isJpgOrPng && isLt2M;\n    }\n\n    const uploadButton = (\n        <div>\n            {loading ? <LoadingOutlined /> : <PlusOutlined />}\n            <div style={{ marginTop: 8 }}>Upload Avatar</div>\n        </div>\n    );\n    return (\n        <>\n            <ImgCrop rotate>\n                <Upload\n                    name=\"avatar\"\n                    customRequest={() => dispatch(upload(\"avatar\", avatar))}\n                    listType=\"picture-card\"\n                    className=\"avatar-uploader\"\n                    multiple={false}\n                    showUploadList={false}\n                    beforeUpload={beforeUpload}>\n                    {/* {imageURL ? <img src={imageURL} alt=\"avatar\" style={{ width: \"100%\" }} /> : uploadButton} */}\n                    {uploadButton}\n                </Upload>\n            </ImgCrop>\n        </>\n    );\n};\n\nexport default AvatarUploader;\n","import React, { useState, useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { Route, Link } from \"react-router-dom\";\nimport { useHistory } from \"react-router-dom\";\nimport {\n    Layout,\n    Avatar,\n    Button,\n    Descriptions,\n    Typography,\n    Menu,\n    Popconfirm,\n    Drawer,\n    message,\n    Row,\n    Col,\n    Divider,\n} from \"antd\";\nimport {\n    UserOutlined,\n    LogoutOutlined,\n    ProjectOutlined,\n    EditOutlined,\n    HomeOutlined,\n    MenuUnfoldOutlined,\n} from \"@ant-design/icons\";\nimport Project from \"./Project\";\nimport Greetings from \"./Greetings\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport { getAvatar, getStudents, logoutMentor } from \"../../redux/mentor/mentorActions\";\nimport ChangePasswordModal from \"./ChangePasswordModal/ChangePasswordModal\";\nimport AvatarUploader from \"./AvatarUploader\";\n\nconst { Title, Text } = Typography;\nconst { Header, Content } = Layout;\nconst { SubMenu } = Menu;\n\nfunction Structure() {\n    function cancel(e) {\n        console.log(e);\n        message.error(\"Click on No\");\n    }\n    const history = useHistory();\n    const dispatch = useDispatch();\n    const mentor = useSelector((state) => state.mentor);\n\n    const [visibleMenu, setVisibleMenu] = useState(false);\n\n    const [editModalVisible, setEditModalVisible] = useState(false);\n\n    const showMenuDrawer = () => {\n        setVisibleMenu(true);\n    };\n    const onMenuClose = () => {\n        setVisibleMenu(false);\n    };\n\n    const [visibleProfile, setVisibleProfile] = useState(false);\n    const [visibleAvatarUpdater, setVisibleAvatarUpdater] = useState(false);\n\n    const showProfileDrawer = () => {\n        setVisibleProfile(true);\n        setVisibleAvatarUpdater(false);\n    };\n    const onClose = () => {\n        setVisibleProfile(false);\n    };\n\n    const handleLogout = async () => {\n        const handleSuccess = () => {\n            localStorage.removeItem(\"mentorData\");\n            history.push(\"/mentor-login\");\n        };\n        const handleError = (errorMsg) => {\n            openNotification(\"error\", \"Error in logging out\", errorMsg);\n        };\n        dispatch(logoutMentor(handleSuccess, handleError));\n    };\n\n    useEffect(() => {\n        dispatch(getAvatar());\n        //eslint-disable-next-line\n    }, [mentor.avatarState]);\n\n    return (\n        <Layout style={{ minHeight: \"100vh\" }}>\n            <Drawer\n                width={300}\n                placement=\"left\"\n                closable={false}\n                onClose={onMenuClose}\n                visible={visibleMenu}\n                drawerStyle={{ backgroundColor: \"#00152a\" }}>\n                <Menu theme=\"dark\" defaultSelectedKeys={[\"1\"]} mode=\"inline\" inlineIndent=\"30\">\n                    <Menu.Item key=\"1\" onClick={showProfileDrawer}>\n                        <Avatar\n                            style={{ backgroundColor: \"#44b4ca\" }}\n                            icon={<UserOutlined />}\n                            src={mentor.data.avatarURL !== undefined ? mentor.data.avatarURL : null}\n                        />\n                        <Text strong style={{ paddingLeft: \"20px\", color: \"white\" }}>\n                            {mentor.data.name}\n                        </Text>\n                    </Menu.Item>\n                    <Menu.Item key=\"2\" title=\"My Profile\" icon={<UserOutlined />} onClick={showProfileDrawer}>\n                        My Profile\n                    </Menu.Item>\n                    <Menu.Item key=\"3\" title=\"My Profile\" icon={<HomeOutlined />} onClick={onMenuClose}>\n                        <Link to=\"/mentor-dashboard\">Home</Link>\n                    </Menu.Item>\n\n                    <SubMenu key=\"sub1\" icon={<ProjectOutlined />} title=\"My Projects\">\n                        {mentor.data.projects ? (\n                            mentor.data.projects.map((project) => (\n                                <Menu.Item key={project._id} onClick={onMenuClose}>\n                                    <Link\n                                        to={`/mentor-dashboard/${project.projectID}`}\n                                        onClick={() => dispatch(getStudents(project._id))}>\n                                        {project.name}\n                                    </Link>\n                                </Menu.Item>\n                            ))\n                        ) : (\n                            <Menu.Item>\n                                <Link to=\"/mentor-dashboard\"> No Projects</Link>\n                            </Menu.Item>\n                        )}\n                    </SubMenu>\n\n                    <Menu.Item key=\"4\" title=\"Logout\" icon={<LogoutOutlined />}>\n                        <Popconfirm\n                            title=\"Are you sure you want to log out?\"\n                            onConfirm={handleLogout}\n                            onCancel={cancel}\n                            okText=\"Yes\"\n                            cancelText=\"No\">\n                            Logout\n                        </Popconfirm>\n                    </Menu.Item>\n                </Menu>\n            </Drawer>\n            <Drawer\n                width={340}\n                title=\"My Profile\"\n                placement=\"right\"\n                closable={false}\n                onClose={onClose}\n                zIndex={2000}\n                visible={visibleProfile}>\n                <Descriptions title={mentor.data.name}>\n                    <Col span={24} style={{ paddingTop: \"1em\", textAlign: \"center\" }}>\n                        {mentor.data.avatarURL ? (\n                            <img\n                                src={mentor.data.avatarURL}\n                                alt={mentor.data.name}\n                                style={{ borderRadius: \"100%\", width: \"80%\" }}\n                            />\n                        ) : (\n                            <div onClick={onClose}>\n                                {\" \"}\n                                <AvatarUploader />\n                            </div>\n                        )}\n                    </Col>\n\n                    <Descriptions.Item span={12} label=\"Email\">\n                        {mentor.data.email}\n                    </Descriptions.Item>\n                    <Descriptions.Item span={12} label=\"Designation\">\n                        {\" \"}\n                        {mentor.data.designation}\n                    </Descriptions.Item>\n                </Descriptions>\n                <Divider />\n                <Button\n                    icon={<EditOutlined />}\n                    type=\"primary\"\n                    shape=\"round\"\n                    block={true}\n                    onClick={() => setEditModalVisible(true)}>\n                    Change Password\n                </Button>\n\n                {mentor.data.avatarURL ? (\n                    <Col span={24} style={{ paddingTop: \"1em\", textAlign: \"center\" }}>\n                        <Divider />\n                        <Button\n                            icon={<EditOutlined />}\n                            type=\"primary\"\n                            shape=\"round\"\n                            block={true}\n                            onClick={() => setVisibleAvatarUpdater(true)}>\n                            Update Profile Picture\n                        </Button>\n                        {visibleAvatarUpdater ? (\n                            <div onClick={onClose}>\n                                <Divider />{\" \"}\n                                <div>\n                                    <AvatarUploader />\n                                </div>\n                            </div>\n                        ) : null}\n                    </Col>\n                ) : null}\n                <ChangePasswordModal\n                    visible={editModalVisible}\n                    setVisible={setEditModalVisible}\n                    initialValues={mentor.data}\n                />\n            </Drawer>\n\n            <Layout className=\"site-layout\">\n                <Header className=\"site-layout-background\" style={{ padding: 10, background: \"#022036\" }}>\n                    <Row>\n                        <Col\n                            xs={{ span: 1, offset: 0 }}\n                            sm={{ span: 2, offset: 0 }}\n                            md={{ span: 2, offset: 0 }}\n                            lg={{ span: 1, offset: 0 }}>\n                            <MenuUnfoldOutlined\n                                onClick={showMenuDrawer}\n                                style={{ color: \"whitesmoke\", fontSize: 40 }}\n                            />\n                        </Col>\n                        <Col\n                            xs={{ span: 10, offset: 5 }}\n                            sm={{ span: 8, offset: 8 }}\n                            md={{ span: 8, offset: 8 }}\n                            lg={{ span: 6, offset: 10 }}>\n                            <Title style={{ color: \"white\" }}>TeamUp</Title>\n                        </Col>\n                        <Col\n                            xs={{ span: 1, offset: 4 }}\n                            sm={{ span: 1, offset: 3 }}\n                            md={{ span: 1, offset: 3 }}\n                            lg={{ span: 1, offset: 5 }}>\n                            <Avatar\n                                size={40}\n                                style={{ cursor: \"pointer\", float: \"right\", backgroundColor: \"#00152a\" }}\n                                icon={<UserOutlined />}\n                                onClick={showProfileDrawer}\n                                src={mentor.data.avatarURL !== undefined ? mentor.data.avatarURL : null}\n                            />\n                        </Col>\n                        <Col\n                            xs={{ span: 1, offset: 2 }}\n                            sm={{ span: 1, offset: 1 }}\n                            md={{ span: 1, offset: 1 }}\n                            lg={{ span: 1, offset: 0 }}>\n                            <Popconfirm\n                                title=\"Are you sure you want to log out?\"\n                                onConfirm={handleLogout}\n                                onCancel={cancel}\n                                okText=\"Yes\"\n                                cancelText=\"No\">\n                                <Avatar\n                                    size={40}\n                                    style={{ cursor: \"pointer\", float: \"right\", backgroundColor: \"#00152a\" }}\n                                    icon={<LogoutOutlined />}\n                                />\n                            </Popconfirm>\n                        </Col>\n                    </Row>\n                </Header>\n\n                <Content style={{ margin: \"0 16px\" }}>\n                    {mentor.data.projects\n                        ? mentor.data.projects.map((project) => (\n                              <Route key={project._id} exact path={`/mentor-dashboard/${project.projectID}`}>\n                                  <Project projectID={project.projectID} />\n                              </Route>\n                          ))\n                        : null}\n                    <Route exact path=\"/mentor-dashboard/\">\n                        <Greetings />\n                    </Route>\n                </Content>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default Structure;\n","import React from \"react\";\nimport { Layout } from \"antd\";\nimport Structure from \"./DashboardStructure\";\n\nconst { Content } = Layout;\n\nconst MentorDashboard = () => {\n    return (\n        <Layout>\n            <Content>\n                <Structure />\n            </Content>\n        </Layout>\n    );\n};\n\nexport default MentorDashboard;\n","import React, { useState } from \"react\";\nimport { Button, Input, Form, Modal, Row, Space, Steps, Typography, Result } from \"antd\";\nimport { MailOutlined, KeyOutlined, CheckCircleOutlined, SmileOutlined } from \"@ant-design/icons\";\nimport axios from \"axios\";\nimport openNotification from \"../../../utils/openAntdNotification\";\n\nconst { Step } = Steps;\n\nconst ForgotLoginModal = ({ visible, setVisible, userType }) => {\n    const [currentStep, setCurrentStep] = useState(0);\n    const [loading, setLoading] = useState(false);\n    const [email, setEmail] = useState(\"\");\n\n    const onEmailFinish = async (values) => {\n        setLoading(true);\n        try {\n            const res = await axios.post(\n                `https://ecell.iitm.ac.in/data/team-up-portal/mail/password-reset?for=${userType}`,\n                values\n            );\n            if (res.data.success) {\n                setEmail(values.email);\n                setLoading(false);\n                setCurrentStep(1);\n            }\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n            openNotification(\"error\", error.response.data.msg || error.message);\n        }\n    };\n\n    const onPasswordFinish = async (values) => {\n        setLoading(true);\n        try {\n            const dataToPost = { ...values, email };\n            const res = await axios.post(\n                `https://ecell.iitm.ac.in/data/team-up-portal/reset-password/${userType}`,\n                dataToPost\n            );\n            if (res.data.success) {\n                setLoading(false);\n                setCurrentStep(2);\n            }\n        } catch (error) {\n            setLoading(false);\n            console.log(error);\n            openNotification(\"error\", error.response.data.msg || error.message);\n        }\n    };\n    return (\n        <Modal visible={visible} closable={false} footer={null} destroyOnClose={true}>\n            <Steps current={currentStep}>\n                <Step icon={<MailOutlined />} />\n                <Step icon={<KeyOutlined />} />\n                <Step icon={<CheckCircleOutlined />} />\n            </Steps>\n            {currentStep === 0 ? (\n                <Form\n                    name=\"forgotPasswordModal\"\n                    onFinish={onEmailFinish}\n                    preserve={false}\n                    layout=\"vertical\"\n                    validateTrigger=\"onSubmit\">\n                    <Form.Item\n                        name=\"email\"\n                        label=\"Enter the corresponding E-Mail\"\n                        rules={[\n                            { required: true, message: \"Please enter your E-Mail\" },\n                            { type: \"email\", message: \"The input is not a valid E-Mail\" },\n                        ]}>\n                        <Input />\n                    </Form.Item>\n                    <Row justify=\"end\">\n                        <Space>\n                            <Button onClick={() => setVisible(false)}>Cancel</Button>\n                            <Form.Item style={{ marginBottom: \"0\" }}>\n                                <Button htmlType=\"submit\" type=\"primary\" loading={loading}>\n                                    Send Password Reset Code\n                                </Button>\n                            </Form.Item>\n                        </Space>\n                    </Row>\n                </Form>\n            ) : currentStep === 1 ? (\n                <Form\n                    name=\"forgotPasswordModal\"\n                    onFinish={onPasswordFinish}\n                    preserve={false}\n                    layout=\"vertical\"\n                    validateTrigger=\"onSubmit\">\n                    <Typography.Text strong>Check your Mail! We've sent you a reset code.</Typography.Text>\n                    <Form.Item\n                        label=\"Insert the reset code here\"\n                        name=\"resetCode\"\n                        rules={[{ required: true, message: \"Please input the required code.\" }]}>\n                        <Input />\n                    </Form.Item>\n                    <Form.Item\n                        label=\"Your new password\"\n                        name=\"newPassword\"\n                        rules={[{ required: true, message: \"Please input your new password\" }]}>\n                        <Input.Password />\n                    </Form.Item>\n                    <Row justify=\"end\">\n                        <Space>\n                            <Button\n                                onClick={() => {\n                                    setCurrentStep(0);\n                                    setVisible(false);\n                                }}>\n                                Cancel\n                            </Button>\n                            <Form.Item style={{ marginBottom: \"0\" }}>\n                                <Button htmlType=\"submit\" type=\"primary\" loading={loading}>\n                                    Reset My Password\n                                </Button>\n                            </Form.Item>\n                        </Space>\n                    </Row>\n                </Form>\n            ) : (\n                <Result\n                    icon={<SmileOutlined />}\n                    title=\"Password reset successful!\"\n                    extra={\n                        <Button type=\"primary\" onClick={() => setVisible(false)}>\n                            Close\n                        </Button>\n                    }\n                />\n            )}\n        </Modal>\n    );\n};\n\nexport default ForgotLoginModal;\n","import React, { useState } from \"react\";\n\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { loginStudent } from \"../../redux/student/studentActions\";\n\nimport { Form, Layout, Input, Button, Row, Col, Card, Typography, Image } from \"antd\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport \"./Login.css\";\nimport { useHistory } from \"react-router-dom\";\nimport ForgotLoginModal from \"./ForgotPasswordModal/ForgotPasswordModal\";\n\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nconst { Header, Content } = Layout;\n\nconst Login = (props) => {\n    const [forgotPasswordModalVisbility, setForgotPasswordModalVisbility] = useState(false);\n    const screen = useBreakpoint();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const loginData = useSelector((state) => state.loginData);\n\n    const onFinish = async (values) => {\n        let dataToPost = { ...values };\n\n        dispatch(loginStudent(dataToPost, handleSuccess, handleError));\n        function handleError(errorMsg) {\n            openNotification(\"error\", \"Error occured in logging in.\", errorMsg);\n        }\n        function handleSuccess() {\n            history.push(\"/student-dashboard\");\n        }\n    };\n\n    return (\n        <>\n            <Header style={{ textAlign: \"center\" }}>\n                <Row>\n                    <Col span={1}>{screen.md && <Image src=\"https://ecell.iitm.ac.in/team_up-static/media/e-cell_logo_white.png\" alt=\"E-Cell Logo\" />}</Col>\n                    <Col flex=\"auto\">\n                        <Typography.Title level={2} style={{ color: \"#fefefe\", margin: 0, lineHeight: \"200%\" }}>\n                            TeamUp <span style={{ fontWeight: \"lighter\" }}> E-Cell IITM</span>\n                        </Typography.Title>\n                    </Col>\n                    <Col span={1}></Col>\n                </Row>\n            </Header>\n            <Content className=\"container\">\n                <ForgotLoginModal\n                    visible={forgotPasswordModalVisbility}\n                    setVisible={setForgotPasswordModalVisbility}\n                    userType=\"student\"\n                />\n                <Card bordered={true} hoverable={!screen.xs} title=\"TeamUp Student Login\" className=\"loginCard\">\n                    <Form size=\"large\" layout=\"vertical\" name=\"Login\" onFinish={onFinish}>\n                        <Form.Item\n                            label=\"E-Mail\"\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your E-Mail!\",\n                                },\n                            ]}>\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your password!\",\n                                },\n                            ]}\n                            extra={\n                                <Button\n                                    onClick={() => setForgotPasswordModalVisbility(true)}\n                                    type=\"link\"\n                                    style={{ paddingLeft: \"0\" }}\n                                    size=\"small\">\n                                    Forgot Password?\n                                </Button>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Row justify=\"space-between\" align=\"bottom\">\n                            <Col span={16}>\n                                <Typography.Title level={5}>\n                                    New here? <Typography.Link href=\"/student-register\">Register</Typography.Link>\n                                </Typography.Title>\n                            </Col>\n                            <Col span={8} style={{ textAlign: \"right\" }}>\n                                <Form.Item style={{ marginBottom: \"0px\" }}>\n                                    <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={loginData.loggingIn}>\n                                        Log In\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card>\n            </Content>\n        </>\n    );\n};\n\nexport default Login;\n","import React, { useState } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { useHistory } from \"react-router-dom\";\nimport { Image, Form, Layout, Input, Button, Row, Col, Grid, Card, Typography } from \"antd\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport { loginMentor } from \"../../redux/mentor/mentorActions\";\nimport \"./Login.css\";\nimport ForgotLoginModal from \"./ForgotPasswordModal/ForgotPasswordModal\";\n\nconst { useBreakpoint } = Grid;\n\nconst { Header, Content } = Layout;\n\nconst Login = () => {\n    const [forgotPasswordModalVisbility, setForgotPasswordModalVisbility] = useState(false);\n    const screen = useBreakpoint();\n    const dispatch = useDispatch();\n    const history = useHistory();\n    const loginData = useSelector((state) => state.loginData);\n\n    const onFinish = async (values) => {\n        let dataToPost = { ...values };\n\n        dispatch(loginMentor(dataToPost, handleSuccess, handleError));\n        function handleError(errorMsg) {\n            openNotification(\"error\", \"Error occured in logging in.\", errorMsg);\n        }\n        function handleSuccess() {\n            history.push(\"/mentor-dashboard\");\n        }\n    };\n\n    const onFinishFailed = (errorInfo) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    return (\n        <>\n            <Header style={{ textAlign: \"center\" }}>\n                <Row>\n                    <Col span={1}>{screen.md && <Image src=\"https://ecell.iitm.ac.in/team_up-static/media/e-cell_logo_white.png\" alt=\"E-Cell Logo\" />}</Col>\n                    <Col flex=\"auto\">\n                        <Typography.Title level={2} style={{ color: \"#fefefe\", margin: 0, lineHeight: \"200%\" }}>\n                            TeamUp <span style={{ fontWeight: \"lighter\" }}> E-Cell IITM</span>\n                        </Typography.Title>\n                    </Col>\n                    <Col span={1}></Col>\n                </Row>\n            </Header>\n            <Content className=\"container\">\n                <ForgotLoginModal\n                    visible={forgotPasswordModalVisbility}\n                    setVisible={setForgotPasswordModalVisbility}\n                    userType=\"mentor\"\n                />\n\n                <Card bordered={true} hoverable={!screen.xs} title=\"TeamUp Mentor Login\" className=\"loginCard\">\n                    <Form\n                        size=\"large\"\n                        layout=\"vertical\"\n                        name=\"Login\"\n                        onFinish={onFinish}\n                        onFinishFailed={onFinishFailed}>\n                        <Form.Item\n                            label=\"E-Mail\"\n                            name=\"email\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your E-Mail!\",\n                                },\n                            ]}>\n                            <Input />\n                        </Form.Item>\n\n                        <Form.Item\n                            label=\"Password\"\n                            name=\"password\"\n                            rules={[\n                                {\n                                    required: true,\n                                    message: \"Please input your password!\",\n                                },\n                            ]}\n                            extra={\n                                <Button\n                                    onClick={() => setForgotPasswordModalVisbility(true)}\n                                    type=\"link\"\n                                    style={{ paddingLeft: \"0\" }}\n                                    size=\"small\">\n                                    Forgot Password?\n                                </Button>\n                            }>\n                            <Input.Password />\n                        </Form.Item>\n\n                        <Row justify=\"end\" align=\"bottom\">\n                            <Col span={8} style={{ textAlign: \"right\" }}>\n                                <Form.Item style={{ marginBottom: \"0px\" }}>\n                                    <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={loginData.loggingIn}>\n                                        Log In\n                                    </Button>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Card>\n            </Content>\n        </>\n    );\n};\n\nexport default Login;\n","import React from \"react\";\nimport { Button, Input, Form, Modal, Row, Space, Typography } from \"antd\";\nimport { registerStudent } from \"../../redux/student/studentActions\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport { useHistory } from \"react-router-dom\";\nimport { useDispatch, useSelector } from \"react-redux\";\n\nconst VerificationModal = ({ visible, setVisible, formValues }) => {\n    const dispatch = useDispatch();\n    const registerData = useSelector((state) => state.registerData);\n    const history = useHistory();\n\n    const onFinish = async ({ verificationCode }) => {\n        try {\n            if (!document.cookie) return null;\n            const verificationToken = document.cookie\n                .split(\";\")\n                .filter((str) => str.trim().startsWith(\"ECELL_VERIFICATION_TOKEN\"))[0]\n                .split(\"=\")[1];\n\n            if (verificationCode === verificationToken) {\n                let dataToPost = { ...formValues };\n                delete dataToPost.confirm;\n                dispatch(registerStudent(dataToPost, handleSuccess, handleError));\n                function handleError(errorMsg) {\n                    openNotification(\"error\", \"Error occured in posting form data.\", errorMsg);\n                }\n                function handleSuccess() {\n                    history.push(\"/student-dashboard\");\n                }\n            } else {\n                openNotification(\"error\", \"The code you entered is incorrect.\", \"\");\n            }\n        } catch (err) {\n            console.log(err);\n        }\n    };\n\n    return (\n        <Modal visible={visible} closable={false} footer={null} destroyOnClose={true}>\n            <Form\n                name=\"verificationModal\"\n                onFinish={onFinish}\n                preserve={false}\n                layout=\"vertical\"\n                validateTrigger=\"onSubmit\">\n                <Typography.Text strong>Check your Mail! We've sent you an verification code.</Typography.Text>\n                <br />\n\n                <Form.Item\n                    label=\"Insert the verification code here\"\n                    name=\"verificationCode\"\n                    rules={[{ required: true, message: \"Please input the required code.\" }]}>\n                    <Input />\n                </Form.Item>\n\n                <Row justify=\"end\">\n                    <Space>\n                        <Form.Item style={{ marginBottom: \"0\" }}>\n                            <Button htmlType=\"submit\" type=\"primary\" loading={registerData.registering}>\n                                Verify my E-Mail\n                            </Button>\n                        </Form.Item>\n                        <Button onClick={() => setVisible(false)}>Discard</Button>\n                    </Space>\n                </Row>\n            </Form>\n        </Modal>\n    );\n};\n\nexport default VerificationModal;\n","import React, { useState } from \"react\";\nimport { Form, Row, Col, Input, Select, Button, Typography, Layout, Image } from \"antd\";\nimport {\n    MailOutlined,\n    UserOutlined,\n    NumberOutlined,\n    CalendarOutlined,\n    PhoneOutlined,\n    KeyOutlined,\n    BankOutlined,\n    SmileOutlined,\n} from \"@ant-design/icons\";\nimport layouts from \"../../utils/antd-layouts\";\nimport openNotification from \"../../utils/openAntdNotification\";\nimport VerificationModal from \"./VerificationModal\";\nimport \"./RegisterForm.css\";\nimport useBreakpoint from \"antd/lib/grid/hooks/useBreakpoint\";\nimport axios from \"axios\";\n\nconst { Content, Header } = Layout;\nconst { Option } = Select;\n\nconst RegisterForm = () => {\n    const [form] = Form.useForm();\n    const screen = useBreakpoint();\n    const [isVerifyModalVisible, setVerificationModalVisibility] = useState(false);\n    const [formValues, setFormValues] = useState({});\n    const [loading, setLoading] = useState(false);\n\n    const onFinish = async (values) => {\n        try {\n            setLoading(true);\n            const values = await form.validateFields();\n            setFormValues(values);\n\n            const { password, confirm, ...dataToPost } = values;\n            try {\n                const res = await axios.post(\n                    `https://ecell.iitm.ac.in/data/team-up-portal/mail/verify-student`,\n                    dataToPost,\n                    { withCredentials: true }\n                );\n                if (res.data.success) {\n                    setLoading(false);\n                    setVerificationModalVisibility(true);\n                }\n            } catch (error) {\n                setLoading(false);\n                console.log(error);\n                openNotification(\"error\", error.response.data.msg || error.message);\n            }\n        } catch (error) {\n            console.log(error);\n        }\n    };\n    return (\n        <>\n            <Header style={{ textAlign: \"center\" }}>\n                <Row>\n                    <Col span={1}>\n                        {screen.md && (\n                            <Image\n                                src=\"https://ecell.iitm.ac.in/team_up-static/media/e-cell_logo_white.png\"\n                                alt=\"E-Cell Logo\"\n                            />\n                        )}\n                    </Col>\n                    <Col flex=\"auto\">\n                        <Typography.Title level={2} style={{ color: \"#fefefe\", margin: 0, lineHeight: \"200%\" }}>\n                            TeamUp <span style={{ fontWeight: \"lighter\" }}> E-Cell IITM</span>\n                        </Typography.Title>\n                    </Col>\n                    <Col span={1}></Col>\n                </Row>\n            </Header>\n            <Content className=\"register-form-container\">\n                <Form\n                    form={form}\n                    name=\"register\"\n                    size=\"large\"\n                    layout=\"vertical\"\n                    validateTrigger=\"onSubmit\"\n                    onFinish={onFinish}>\n                    <Row gutter={24}>\n                        <Col span={24}>\n                            <Form.Item\n                                name=\"name\"\n                                label={\n                                    <span>\n                                        <UserOutlined /> Name\n                                    </span>\n                                }\n                                rules={[{ required: true, message: \"Please enter your name!\" }]}>\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                name=\"roll\"\n                                label={\n                                    <span>\n                                        <NumberOutlined /> Roll no.\n                                    </span>\n                                }\n                                rules={[{ required: true, message: \"Please enter your Roll No.\" }]}>\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                name=\"branch\"\n                                label={\n                                    <span>\n                                        <BankOutlined /> Branch\n                                    </span>\n                                }\n                                rules={[{ required: true, message: \"Please enter your Branch.\" }]}>\n                                <Input />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                name=\"phone\"\n                                validateFirst={true}\n                                label={\n                                    <span>\n                                        <PhoneOutlined /> Phone number\n                                    </span>\n                                }\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please input your phone number!\",\n                                    },\n                                    {\n                                        type: \"string\",\n                                        message: \"Please enter a valid phone number.\",\n                                    },\n                                    {\n                                        pattern: new RegExp(/^[0-9][s./0-9]*$/g),\n                                        message: \"Please enter a valid phone number.\",\n                                    },\n                                    {\n                                        max: 10,\n                                        message: \"Please enter a valid phone number.\",\n                                    },\n                                    {\n                                        min: 10,\n                                        message: \"Please enter a valid phone number.\",\n                                    },\n                                ]}>\n                                <Input prefix=\"+91\" />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                name=\"yearOfStudy\"\n                                label={\n                                    <span>\n                                        <CalendarOutlined /> Year of study\n                                    </span>\n                                }\n                                rules={[{ required: true, message: \"Please enter your current year of study.\" }]}>\n                                <Select id=\"yearOfStudy\">\n                                    <Option key=\"1st year\" value=\"1st year\">\n                                        1st year\n                                    </Option>\n                                    <Option key=\"2nd year\" value=\"2nd year\">\n                                        2nd year\n                                    </Option>\n                                    <Option key=\"3rd year\" value=\"3rd year\">\n                                        3rd year\n                                    </Option>\n                                    <Option key=\"4th year\" value=\"4th year\">\n                                        4th year\n                                    </Option>\n                                    <Option key=\"5th year\" value=\"5th year\">\n                                        5th year\n                                    </Option>\n                                    <Option key=\"PG/Ph.D\" value=\"PG/Ph.D\">\n                                        PG/Ph.D\n                                    </Option>\n                                </Select>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n\n                    <Row gutter={24}>\n                        <Col span={24}>\n                            <Form.Item\n                                dependencies={[\"roll\"]}\n                                hasFeedback\n                                validateTrigger=\"onChange\"\n                                name=\"email\"\n                                label={\n                                    <span>\n                                        <MailOutlined /> E-mail\n                                    </span>\n                                }\n                                rules={[\n                                    {\n                                        type: \"email\",\n                                        message: \"The input is not valid E-mail!\",\n                                    },\n                                    {\n                                        required: true,\n                                        message: \"Please input your E-mail!\",\n                                    },\n\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value) return Promise.reject(\"\");\n\n                                            if (!value.endsWith(\"@smail.iitm.ac.in\")) {\n                                                return Promise.reject(\"Please use your SMail\");\n                                            } else if (\n                                                getFieldValue(\"roll\") &&\n                                                value !== `${getFieldValue(\"roll\").toLowerCase()}@smail.iitm.ac.in`\n                                            ) {\n                                                return Promise.reject(\n                                                    \"The SMail doesn't correspond with your Roll No. Please recheck.\"\n                                                );\n                                            } else {\n                                                return Promise.resolve()\n                                            }\n                                        },\n                                    }),\n                                ]}>\n                                <Input placeholder=\"Please use your SMail ID\" />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                name=\"password\"\n                                extra={\n                                    <span>\n                                        It can be anything. Just keep it more than 6 letters. <SmileOutlined />\n                                    </span>\n                                }\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please create a password.\",\n                                    },\n                                    {\n                                        min: 6,\n                                        message: \"Please input at least 6 characters.\",\n                                    },\n                                ]}\n                                label={\n                                    <span>\n                                        <KeyOutlined /> Create Password\n                                    </span>\n                                }>\n                                <Input.Password />\n                            </Form.Item>\n                        </Col>\n                        <Col {...layouts.halfInLarge}>\n                            <Form.Item\n                                dependencies={[\"password\"]}\n                                name=\"confirm\"\n                                hasFeedback\n                                validateTrigger=\"onChange\"\n                                rules={[\n                                    {\n                                        required: true,\n                                        message: \"Please confirm your password.\",\n                                    },\n                                    ({ getFieldValue }) => ({\n                                        validator(rule, value) {\n                                            if (!value || getFieldValue(\"password\") === value) {\n                                                return Promise.resolve();\n                                            }\n                                            return Promise.reject(\"\");\n                                        },\n                                    }),\n                                ]}\n                                label={\n                                    <span>\n                                        <KeyOutlined /> Confirm Password\n                                    </span>\n                                }>\n                                <Input.Password />\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                    <Row align=\"bottom\">\n                        <Col span={16}>\n                            <Typography.Title level={5} style={{ margin: \"0px\" }}>\n                                Already have an account? <Typography.Link href=\"/login\">Log In</Typography.Link>\n                            </Typography.Title>\n                        </Col>\n                        <Col span={8} style={{ textAlign: \"right\" }}>\n                            <Form.Item style={{ marginBottom: \"0px\" }}>\n                                <Button type=\"primary\" size=\"large\" htmlType=\"submit\" loading={loading}>\n                                    Register\n                                </Button>\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n                <VerificationModal\n                    setVisible={setVerificationModalVisibility}\n                    visible={isVerifyModalVisible}\n                    formValues={formValues}\n                />\n            </Content>\n        </>\n    );\n};\n\nexport default RegisterForm;\n","import React from \"react\";\n\nconst NotFound = () => {\n    return (\n        <div>\n            <h1>404</h1>\n            <h2>Sorry. The page you requested isn't available.</h2>\n        </div>\n    );\n};\n\nexport default NotFound;","import React from \"react\";\nimport { Row, Col, Grid, Divider, Popover, Typography } from \"antd\";\nimport { WhatsAppOutlined } from \"@ant-design/icons\";\nimport layouts from \"../utils/antd-layouts\";\n\nconst { useBreakpoint } = Grid;\n\nconst ECellFooter = ({ developers }) => {\n    const screen = useBreakpoint();\n    const developerDetails = (\n        <div>\n            {developers.map((developer) => (\n                <div key={developer.whatsappNum}>\n                    <Typography.Link href={developer.profileURL} target=\"blank\">\n                        {developer.name}\n                    </Typography.Link>{\" \"}\n                    <WhatsAppOutlined /> :{\" \"}\n                    <Typography.Text copyable={{ tooltips: false }}>{developer.whatsappNum}</Typography.Text>\n                </div>\n            ))}\n        </div>\n    );\n    return (\n        <Row>\n            <Col\n                {...layouts.oneFourthInLarge}\n                offset={(screen?.md || screen?.lg) && 3}\n                style={!(screen?.lg || screen?.md) && { textAlign: \"center\" }}>\n                <div>\n                    &copy;Developed by {!(screen?.lg || screen?.md) && <br />}\n                    <strong>Web Operations | E-Cell | IIT Madras.</strong>\n                    <br />\n                    All Rights Reserved.\n                </div>\n            </Col>\n\n            {!(screen?.lg || screen?.md) && <Divider />}\n\n            <Col\n                {...layouts.oneFourthInLarge}\n                offset={(screen?.md || screen?.lg) && 6}\n                style={!(screen?.lg || screen?.md) && { textAlign: \"center\" }}>\n                <div>\n                    <span>For issues related to the website, </span>\n                    <Popover content={developerDetails}>\n                        <Typography.Link>contact us.</Typography.Link>\n                    </Popover>\n                </div>\n            </Col>\n        </Row>\n    );\n};\n\nexport default ECellFooter;\n","import React from \"react\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { Layout } from \"antd\";\n\nimport { PrivateRoute, PublicRoute } from \"./common/SpecialRoutes\";\n\nimport \"./App.css\";\nimport StudentDashboard from \"./views/StudentDashboard/StudentDashboard\";\nimport MentorDashboard from \"./views/MentorDashboard/MentorDashboard\";\nimport Login from \"./views/Login/Login\";\nimport LoginMentor from \"./views/Login/LoginMentor\";\nimport RegisterForm from \"./views/RegisterForm/RegisterForm\";\nimport NotFound from \"./views/NotFound\";\nimport ECellFooter from \"./common/ECellFooter\";\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/store\";\nimport storeMentor from \"./redux/storeMentor\";\n\nconst { Footer } = Layout;\n\nfunction App() {\n    const urlArr = [\"/\", \"/mentor-dashboard\", \"/mentor-login\", \"/student-register\", \"/student-dashboard\", \"/login\"];\n\n    return (\n        <Layout className=\"App\">\n            <Router>\n                <Layout>\n                    {/* <div style={{ display: \"flex\", alignItems: \"center\", justifyContent: \"space-around\" }}>\n                        <Link to=\"/login\">Login</Link>\n                        <Link to=\"/mentor-login\">Mentor Login</Link>\n                        <Link to=\"/student-register\">Student Register</Link>\n                        <Link to=\"/mentor-dashboard\">Mentor Dashboard</Link>\n                        <Link to=\"/student-dashboard\">Student Dashboard</Link>\n                    </div> */}\n\n                    <Provider store={store}>\n                        <Switch>\n                            <PublicRoute exact path=\"/login\" component={Login} />\n                            <PublicRoute exact path=\"/student-register\" component={RegisterForm} />\n                            <PrivateRoute\n                                exact\n                                path=\"/student-dashboard\"\n                                component={StudentDashboard}\n                                redirectTo=\"/login\"\n                            />\n                        </Switch>\n                    </Provider>\n\n                    <Provider store={storeMentor}>\n                        <Switch>\n                            <PublicRoute exact path=\"/mentor-login\" component={LoginMentor} />\n                            <PrivateRoute\n                                path=\"/mentor-dashboard\"\n                                component={MentorDashboard}\n                                redirectTo=\"/mentor-login\"\n                            />\n                        </Switch>\n                    </Provider>\n\n                    {/* This was needed because a top level Switch didn't work. */}\n                    {!urlArr.find((url) => window.location.pathname.startsWith(url)) && (\n                        <Route path={window.location.pathname} component={NotFound} />\n                    )}\n                </Layout>\n            </Router>\n            <Footer\n                style={{\n                    backgroundColor: \"white\",\n                    boxShadow: \"0px -1px 20px rgba(85, 85, 85, 0.2)\",\n                    padding: \"20px\",\n                    marginTop: \"1rem\",\n                    zIndex: 1002,\n                }}>\n                <ECellFooter\n                    developers={[\n                        {\n                            name: \"Abhijit\",\n                            whatsappNum: \"+91 8895219514\",\n                            profileURL: \"https://github.com/abhijit-hota\",\n                        },\n                        { name: \"Ashish\", whatsappNum: \"+91 9983321407\", profileURL: \"https://github.com/ashishshroti14\" },\n                    ]}\n                />\n            </Footer>\n        </Layout>\n    );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}